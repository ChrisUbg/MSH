version: '3.8'

services:
  db:
    image: postgres:16
    environment:
      POSTGRES_DB: matter_dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: devpassword
    ports:
      - "5434:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - msh_network

  web:
    build:
      context: .
      dockerfile: src/MSH.Web/Dockerfile.dev
    ports:
      - "8082:8082"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8082
    volumes:
      - .:/workspace
      - /workspace/src/MSH.Web/bin
      - /workspace/src/MSH.Web/obj
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8082/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - msh_network

  matter-bridge:
    build:
      context: ./Matter
      dockerfile: Dockerfile.dev
    environment:
      - MATTER_SDK_PATH=/matter-sdk
      - CHIP_TOOL_PATH=/matter-sdk/out/linux-x64-all-clusters-ipv6only/chip-tool
    volumes:
      - ./Matter:/app
      - matter-sdk:/matter-sdk
    ports:
      - "8084:8084"
    cap_add:
      - NET_ADMIN
      - NET_RAW
    devices:
      - /dev/vhci:/dev/vhci
      - /dev/bus/usb:/dev/bus/usb
    extra_hosts:
      - "host.docker.internal:host-gateway"
    deploy:
      resources:
        limits:
          memory: 4G
        reservations:
          memory: 2G
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8084/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - msh_network

volumes:
  postgres_data:
  matter-sdk:

networks:
  msh_network:
    driver: bridge 