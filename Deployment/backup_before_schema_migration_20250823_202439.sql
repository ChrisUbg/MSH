--
-- PostgreSQL database dump
--

-- Dumped from database version 16.8 (Debian 16.8-1.pgdg120+1)
-- Dumped by pg_dump version 16.9 (Ubuntu 16.9-0ubuntu0.24.04.1)

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: db; Type: SCHEMA; Schema: -; Owner: postgres
--

CREATE SCHEMA db;


ALTER SCHEMA db OWNER TO postgres;

--
-- Name: public; Type: SCHEMA; Schema: -; Owner: pg_database_owner
--

CREATE SCHEMA public;


ALTER SCHEMA public OWNER TO pg_database_owner;

--
-- Name: SCHEMA public; Type: COMMENT; Schema: -; Owner: pg_database_owner
--

COMMENT ON SCHEMA public IS 'standard public schema';


SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: ApplicationUsers; Type: TABLE; Schema: db; Owner: postgres
--

CREATE TABLE db."ApplicationUsers" (
    "Id" character varying(500) NOT NULL,
    "CreatedAt" timestamp with time zone NOT NULL,
    "UpdatedAt" timestamp with time zone,
    "IsDeleted" boolean NOT NULL,
    "CreatedById" character varying(500) NOT NULL,
    "UpdatedById" character varying(500),
    "UserName" character varying(150) NOT NULL,
    "Email" character varying(150),
    "FirstName" character varying(150),
    "LastName" character varying(150),
    "IsActive" boolean NOT NULL,
    "LastLogin" timestamp with time zone NOT NULL
);


ALTER TABLE db."ApplicationUsers" OWNER TO postgres;

--
-- Name: AspNetRoleClaims; Type: TABLE; Schema: db; Owner: postgres
--

CREATE TABLE db."AspNetRoleClaims" (
    "Id" integer NOT NULL,
    "RoleId" text NOT NULL,
    "ClaimType" text,
    "ClaimValue" text
);


ALTER TABLE db."AspNetRoleClaims" OWNER TO postgres;

--
-- Name: AspNetRoleClaims_Id_seq; Type: SEQUENCE; Schema: db; Owner: postgres
--

ALTER TABLE db."AspNetRoleClaims" ALTER COLUMN "Id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME db."AspNetRoleClaims_Id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: AspNetRoles; Type: TABLE; Schema: db; Owner: postgres
--

CREATE TABLE db."AspNetRoles" (
    "Id" text NOT NULL,
    "Name" character varying(256),
    "NormalizedName" character varying(256),
    "ConcurrencyStamp" text
);


ALTER TABLE db."AspNetRoles" OWNER TO postgres;

--
-- Name: AspNetUserClaims; Type: TABLE; Schema: db; Owner: postgres
--

CREATE TABLE db."AspNetUserClaims" (
    "Id" integer NOT NULL,
    "UserId" text NOT NULL,
    "ClaimType" text,
    "ClaimValue" text
);


ALTER TABLE db."AspNetUserClaims" OWNER TO postgres;

--
-- Name: AspNetUserClaims_Id_seq; Type: SEQUENCE; Schema: db; Owner: postgres
--

ALTER TABLE db."AspNetUserClaims" ALTER COLUMN "Id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME db."AspNetUserClaims_Id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: AspNetUserLogins; Type: TABLE; Schema: db; Owner: postgres
--

CREATE TABLE db."AspNetUserLogins" (
    "LoginProvider" text NOT NULL,
    "ProviderKey" text NOT NULL,
    "ProviderDisplayName" text,
    "UserId" text NOT NULL
);


ALTER TABLE db."AspNetUserLogins" OWNER TO postgres;

--
-- Name: AspNetUserRoles; Type: TABLE; Schema: db; Owner: postgres
--

CREATE TABLE db."AspNetUserRoles" (
    "UserId" text NOT NULL,
    "RoleId" text NOT NULL
);


ALTER TABLE db."AspNetUserRoles" OWNER TO postgres;

--
-- Name: AspNetUserTokens; Type: TABLE; Schema: db; Owner: postgres
--

CREATE TABLE db."AspNetUserTokens" (
    "UserId" text NOT NULL,
    "LoginProvider" text NOT NULL,
    "Name" text NOT NULL,
    "Value" text
);


ALTER TABLE db."AspNetUserTokens" OWNER TO postgres;

--
-- Name: AspNetUsers; Type: TABLE; Schema: db; Owner: postgres
--

CREATE TABLE db."AspNetUsers" (
    "Id" text NOT NULL,
    "UserName" character varying(256),
    "NormalizedUserName" character varying(256),
    "Email" character varying(256),
    "NormalizedEmail" character varying(256),
    "EmailConfirmed" boolean NOT NULL,
    "PasswordHash" text,
    "SecurityStamp" text,
    "ConcurrencyStamp" text,
    "PhoneNumber" text,
    "PhoneNumberConfirmed" boolean NOT NULL,
    "TwoFactorEnabled" boolean NOT NULL,
    "LockoutEnd" timestamp with time zone,
    "LockoutEnabled" boolean NOT NULL,
    "AccessFailedCount" integer NOT NULL
);


ALTER TABLE db."AspNetUsers" OWNER TO postgres;

--
-- Name: Clusters; Type: TABLE; Schema: db; Owner: postgres
--

CREATE TABLE db."Clusters" (
    "Id" uuid NOT NULL,
    "ClusterId" integer NOT NULL,
    "Name" character varying(100) NOT NULL,
    "Description" character varying(500),
    "Category" character varying(50),
    "IsRequired" boolean NOT NULL,
    "IsOptional" boolean NOT NULL,
    "MatterVersion" character varying(20),
    "Attributes" jsonb,
    "Commands" jsonb,
    "Events" jsonb,
    "CreatedAt" timestamp with time zone NOT NULL,
    "UpdatedAt" timestamp with time zone,
    "IsDeleted" boolean NOT NULL,
    "CreatedById" text NOT NULL,
    "UpdatedById" text
);


ALTER TABLE db."Clusters" OWNER TO postgres;

--
-- Name: DeviceDeviceGroup; Type: TABLE; Schema: db; Owner: postgres
--

CREATE TABLE db."DeviceDeviceGroup" (
    "DeviceGroupsId" uuid NOT NULL,
    "DevicesId" uuid NOT NULL
);


ALTER TABLE db."DeviceDeviceGroup" OWNER TO postgres;

--
-- Name: DeviceEventLogs; Type: TABLE; Schema: db; Owner: postgres
--

CREATE TABLE db."DeviceEventLogs" (
    "Id" uuid NOT NULL,
    "DeviceId" uuid NOT NULL,
    "Event" character varying(100) NOT NULL,
    "Timestamp" timestamp with time zone NOT NULL,
    "Description" character varying(500),
    "EventType" character varying(50),
    "Severity" character varying(50),
    "EventData" jsonb,
    "OldState" jsonb,
    "NewState" jsonb,
    "Source" character varying(100),
    "UserId" character varying(100),
    "CreatedAt" timestamp with time zone NOT NULL,
    "UpdatedAt" timestamp with time zone,
    "IsDeleted" boolean NOT NULL,
    "CreatedById" text NOT NULL,
    "UpdatedById" text
);


ALTER TABLE db."DeviceEventLogs" OWNER TO postgres;

--
-- Name: DeviceEvents; Type: TABLE; Schema: db; Owner: postgres
--

CREATE TABLE db."DeviceEvents" (
    "Id" uuid NOT NULL,
    "DeviceId" uuid NOT NULL,
    "EventType" character varying(150) NOT NULL,
    "EventData" jsonb,
    "CreatedAt" timestamp with time zone NOT NULL,
    "UpdatedAt" timestamp with time zone,
    "IsDeleted" boolean NOT NULL,
    "CreatedById" text NOT NULL,
    "UpdatedById" text
);


ALTER TABLE db."DeviceEvents" OWNER TO postgres;

--
-- Name: DeviceFirmwareUpdates; Type: TABLE; Schema: db; Owner: postgres
--

CREATE TABLE db."DeviceFirmwareUpdates" (
    "Id" uuid NOT NULL,
    "DeviceId" uuid NOT NULL,
    "FirmwareUpdateId" uuid NOT NULL,
    "CurrentVersion" character varying(50) NOT NULL,
    "TargetVersion" character varying(50) NOT NULL,
    "Status" character varying(20) NOT NULL,
    "DownloadStartedAt" timestamp with time zone,
    "DownloadCompletedAt" timestamp with time zone,
    "InstallationStartedAt" timestamp with time zone,
    "InstallationCompletedAt" timestamp with time zone,
    "TestCompletedAt" timestamp with time zone,
    "TestPassed" boolean NOT NULL,
    "ErrorMessage" character varying(500),
    "TestResults" jsonb,
    "IsConfirmed" boolean NOT NULL,
    "ConfirmedAt" timestamp with time zone,
    "ConfirmedBy" character varying(50),
    "IsRollbackAvailable" boolean NOT NULL,
    "RollbackCompletedAt" timestamp with time zone,
    "RollbackReason" character varying(500),
    "UpdateLog" jsonb,
    "CreatedAt" timestamp with time zone NOT NULL,
    "UpdatedAt" timestamp with time zone,
    "IsDeleted" boolean NOT NULL,
    "CreatedById" text NOT NULL,
    "UpdatedById" text
);


ALTER TABLE db."DeviceFirmwareUpdates" OWNER TO postgres;

--
-- Name: DeviceGroups; Type: TABLE; Schema: db; Owner: postgres
--

CREATE TABLE db."DeviceGroups" (
    "Id" uuid NOT NULL,
    "Name" character varying(50) NOT NULL,
    "Description" character varying(150),
    "Icon" character varying(150) NOT NULL,
    "PreferredCommissioningMethod" character varying(150) NOT NULL,
    "DefaultCapabilities" jsonb,
    "SortOrder" integer NOT NULL,
    "IsActive" boolean NOT NULL,
    "RoomId" uuid,
    "CreatedAt" timestamp with time zone NOT NULL,
    "UpdatedAt" timestamp with time zone,
    "IsDeleted" boolean NOT NULL,
    "CreatedById" text NOT NULL,
    "UpdatedById" text
);


ALTER TABLE db."DeviceGroups" OWNER TO postgres;

--
-- Name: DeviceHistory; Type: TABLE; Schema: db; Owner: postgres
--

CREATE TABLE db."DeviceHistory" (
    "Id" uuid NOT NULL,
    "DeviceId" uuid NOT NULL,
    "EventType" character varying(150) NOT NULL,
    "OldState" jsonb,
    "NewState" jsonb,
    "Description" character varying(150),
    "CreatedAt" timestamp with time zone NOT NULL,
    "UpdatedAt" timestamp with time zone,
    "IsDeleted" boolean NOT NULL,
    "CreatedById" text NOT NULL,
    "UpdatedById" text
);


ALTER TABLE db."DeviceHistory" OWNER TO postgres;

--
-- Name: DevicePropertyChanges; Type: TABLE; Schema: db; Owner: postgres
--

CREATE TABLE db."DevicePropertyChanges" (
    "Id" uuid NOT NULL,
    "DeviceId" uuid NOT NULL,
    "PropertyName" character varying(100) NOT NULL,
    "OldValue" jsonb,
    "NewValue" jsonb,
    "ChangeType" character varying(50) NOT NULL,
    "Reason" character varying(200),
    "ChangeTimestamp" timestamp with time zone NOT NULL,
    "IsConfirmed" boolean NOT NULL,
    "ConfirmedAt" timestamp with time zone,
    "ConfirmedBy" character varying(50),
    "CreatedAt" timestamp with time zone NOT NULL,
    "UpdatedAt" timestamp with time zone,
    "IsDeleted" boolean NOT NULL,
    "CreatedById" text NOT NULL,
    "UpdatedById" text
);


ALTER TABLE db."DevicePropertyChanges" OWNER TO postgres;

--
-- Name: DeviceStates; Type: TABLE; Schema: db; Owner: postgres
--

CREATE TABLE db."DeviceStates" (
    "Id" uuid NOT NULL,
    "DeviceId" uuid NOT NULL,
    "StateType" character varying(150) NOT NULL,
    "StateValue" jsonb NOT NULL,
    "RecordedAt" timestamp with time zone NOT NULL,
    "CreatedAt" timestamp with time zone NOT NULL,
    "UpdatedAt" timestamp with time zone,
    "IsDeleted" boolean NOT NULL,
    "CreatedById" text NOT NULL,
    "UpdatedById" text
);


ALTER TABLE db."DeviceStates" OWNER TO postgres;

--
-- Name: DeviceTypes; Type: TABLE; Schema: db; Owner: postgres
--

CREATE TABLE db."DeviceTypes" (
    "Id" uuid NOT NULL,
    "Name" character varying(50) NOT NULL,
    "Description" character varying(150),
    "Capabilities" jsonb NOT NULL,
    "IsSimulated" boolean NOT NULL,
    "Icon" character varying(150) NOT NULL,
    "PreferredCommissioningMethod" character varying(150) NOT NULL,
    "DeviceGroupId" uuid,
    "CreatedAt" timestamp with time zone NOT NULL,
    "UpdatedAt" timestamp with time zone,
    "IsDeleted" boolean NOT NULL,
    "CreatedById" text NOT NULL,
    "UpdatedById" text
);


ALTER TABLE db."DeviceTypes" OWNER TO postgres;

--
-- Name: Devices; Type: TABLE; Schema: db; Owner: postgres
--

CREATE TABLE db."Devices" (
    "Id" uuid NOT NULL,
    "Name" character varying(50) NOT NULL,
    "Description" character varying(150),
    "MatterDeviceId" character varying(150),
    "DeviceTypeId" uuid NOT NULL,
    "RoomId" uuid,
    "Properties" jsonb NOT NULL,
    "Status" character varying(50) NOT NULL,
    "Configuration" jsonb,
    "LastStateChange" timestamp with time zone NOT NULL,
    "IsOnline" boolean NOT NULL,
    "LastSeen" timestamp with time zone NOT NULL,
    "CreatedAt" timestamp with time zone NOT NULL,
    "UpdatedAt" timestamp with time zone,
    "IsDeleted" boolean NOT NULL,
    "CreatedById" text NOT NULL,
    "UpdatedById" text
);


ALTER TABLE db."Devices" OWNER TO postgres;

--
-- Name: EnvironmentalSettings; Type: TABLE; Schema: db; Owner: postgres
--

CREATE TABLE db."EnvironmentalSettings" (
    "Id" uuid NOT NULL,
    "UserId" character varying(150),
    "IndoorTemperatureMin" double precision NOT NULL,
    "IndoorTemperatureMax" double precision NOT NULL,
    "OutdoorTemperatureMin" double precision NOT NULL,
    "OutdoorTemperatureMax" double precision NOT NULL,
    "HumidityMin" double precision NOT NULL,
    "HumidityMax" double precision NOT NULL,
    "CO2Max" double precision NOT NULL,
    "VOCMax" double precision NOT NULL,
    "TemperatureWarning" double precision NOT NULL,
    "HumidityWarning" double precision NOT NULL,
    "LastUpdated" timestamp with time zone NOT NULL,
    "CreatedAt" timestamp with time zone NOT NULL,
    "UpdatedAt" timestamp with time zone,
    "IsDeleted" boolean NOT NULL,
    "CreatedById" text NOT NULL,
    "UpdatedById" text
);


ALTER TABLE db."EnvironmentalSettings" OWNER TO postgres;

--
-- Name: FirmwareUpdates; Type: TABLE; Schema: db; Owner: postgres
--

CREATE TABLE db."FirmwareUpdates" (
    "Id" uuid NOT NULL,
    "Name" character varying(100) NOT NULL,
    "Description" character varying(500),
    "CurrentVersion" character varying(50) NOT NULL,
    "TargetVersion" character varying(50) NOT NULL,
    "DownloadUrl" character varying(200),
    "FileName" character varying(100),
    "FileSize" bigint,
    "Checksum" character varying(100),
    "Status" character varying(20) NOT NULL,
    "DownloadStartedAt" timestamp with time zone,
    "DownloadCompletedAt" timestamp with time zone,
    "InstallationStartedAt" timestamp with time zone,
    "InstallationCompletedAt" timestamp with time zone,
    "ErrorMessage" character varying(500),
    "UpdateMetadata" jsonb,
    "IsCompatible" boolean NOT NULL,
    "RequiresConfirmation" boolean NOT NULL,
    "IsConfirmed" boolean NOT NULL,
    "ConfirmedAt" timestamp with time zone,
    "ConfirmedBy" character varying(50),
    "CreatedAt" timestamp with time zone NOT NULL,
    "UpdatedAt" timestamp with time zone,
    "IsDeleted" boolean NOT NULL,
    "CreatedById" text NOT NULL,
    "UpdatedById" text
);


ALTER TABLE db."FirmwareUpdates" OWNER TO postgres;

--
-- Name: GroupMembers; Type: TABLE; Schema: db; Owner: postgres
--

CREATE TABLE db."GroupMembers" (
    "GroupId" uuid NOT NULL,
    "DeviceId" uuid NOT NULL,
    "Id" uuid NOT NULL,
    "CreatedAt" timestamp with time zone NOT NULL,
    "UpdatedAt" timestamp with time zone,
    "IsDeleted" boolean NOT NULL,
    "CreatedById" text NOT NULL,
    "UpdatedById" text
);


ALTER TABLE db."GroupMembers" OWNER TO postgres;

--
-- Name: GroupStateHistory; Type: TABLE; Schema: db; Owner: postgres
--

CREATE TABLE db."GroupStateHistory" (
    "Id" uuid NOT NULL,
    "GroupId" uuid NOT NULL,
    "OldState" jsonb NOT NULL,
    "NewState" jsonb NOT NULL,
    "Description" character varying(150),
    "CreatedAt" timestamp with time zone NOT NULL,
    "UpdatedAt" timestamp with time zone,
    "IsDeleted" boolean NOT NULL,
    "CreatedById" text NOT NULL,
    "UpdatedById" text
);


ALTER TABLE db."GroupStateHistory" OWNER TO postgres;

--
-- Name: GroupStates; Type: TABLE; Schema: db; Owner: postgres
--

CREATE TABLE db."GroupStates" (
    "GroupId" uuid NOT NULL,
    "State" jsonb NOT NULL,
    "LastUpdated" timestamp with time zone NOT NULL,
    "Id" uuid NOT NULL,
    "CreatedAt" timestamp with time zone NOT NULL,
    "UpdatedAt" timestamp with time zone,
    "IsDeleted" boolean NOT NULL,
    "CreatedById" text NOT NULL,
    "UpdatedById" text
);


ALTER TABLE db."GroupStates" OWNER TO postgres;

--
-- Name: Groups; Type: TABLE; Schema: db; Owner: postgres
--

CREATE TABLE db."Groups" (
    "Id" uuid NOT NULL,
    "Name" character varying(50) NOT NULL,
    "Description" character varying(150),
    "CreatedAt" timestamp with time zone NOT NULL,
    "UpdatedAt" timestamp with time zone,
    "IsDeleted" boolean NOT NULL,
    "CreatedById" text NOT NULL,
    "UpdatedById" text
);


ALTER TABLE db."Groups" OWNER TO postgres;

--
-- Name: Notifications; Type: TABLE; Schema: db; Owner: postgres
--

CREATE TABLE db."Notifications" (
    "Id" uuid NOT NULL,
    "UserId" text NOT NULL,
    "Message" character varying(500) NOT NULL,
    "Type" integer NOT NULL,
    "Severity" integer,
    "IsRead" boolean NOT NULL,
    "ReadAt" timestamp with time zone,
    "CreatedAt" timestamp with time zone NOT NULL,
    "UpdatedAt" timestamp with time zone,
    "IsDeleted" boolean NOT NULL,
    "CreatedById" text NOT NULL,
    "UpdatedById" text
);


ALTER TABLE db."Notifications" OWNER TO postgres;

--
-- Name: Rooms; Type: TABLE; Schema: db; Owner: postgres
--

CREATE TABLE db."Rooms" (
    "Id" uuid NOT NULL,
    "Name" character varying(50) NOT NULL,
    "Description" character varying(150),
    "Floor" integer,
    "CreatedAt" timestamp with time zone NOT NULL,
    "UpdatedAt" timestamp with time zone,
    "IsDeleted" boolean NOT NULL,
    "CreatedById" text NOT NULL,
    "UpdatedById" text
);


ALTER TABLE db."Rooms" OWNER TO postgres;

--
-- Name: RuleActions; Type: TABLE; Schema: db; Owner: postgres
--

CREATE TABLE db."RuleActions" (
    "Id" uuid NOT NULL,
    "RuleId" uuid NOT NULL,
    "Action" jsonb NOT NULL,
    "Order" integer NOT NULL,
    "CreatedAt" timestamp with time zone NOT NULL,
    "UpdatedAt" timestamp with time zone,
    "IsDeleted" boolean NOT NULL,
    "CreatedById" text NOT NULL,
    "UpdatedById" text
);


ALTER TABLE db."RuleActions" OWNER TO postgres;

--
-- Name: RuleConditions; Type: TABLE; Schema: db; Owner: postgres
--

CREATE TABLE db."RuleConditions" (
    "Id" uuid NOT NULL,
    "RuleId" uuid NOT NULL,
    "Condition" jsonb NOT NULL,
    "Order" integer NOT NULL,
    "CreatedAt" timestamp with time zone NOT NULL,
    "UpdatedAt" timestamp with time zone,
    "IsDeleted" boolean NOT NULL,
    "CreatedById" text NOT NULL,
    "UpdatedById" text
);


ALTER TABLE db."RuleConditions" OWNER TO postgres;

--
-- Name: RuleExecutionHistory; Type: TABLE; Schema: db; Owner: postgres
--

CREATE TABLE db."RuleExecutionHistory" (
    "Id" uuid NOT NULL,
    "RuleId" uuid NOT NULL,
    "Success" boolean NOT NULL,
    "Result" jsonb,
    "ErrorMessage" character varying(500),
    "ExecutionTime" timestamp with time zone NOT NULL,
    "CreatedAt" timestamp with time zone NOT NULL,
    "UpdatedAt" timestamp with time zone,
    "IsDeleted" boolean NOT NULL,
    "CreatedById" text NOT NULL,
    "UpdatedById" text
);


ALTER TABLE db."RuleExecutionHistory" OWNER TO postgres;

--
-- Name: RuleTriggers; Type: TABLE; Schema: db; Owner: postgres
--

CREATE TABLE db."RuleTriggers" (
    "Id" uuid NOT NULL,
    "RuleId" uuid NOT NULL,
    "TriggerType" character varying(500) NOT NULL,
    "Trigger" jsonb NOT NULL,
    "IsEnabled" boolean NOT NULL,
    "LastTriggered" timestamp with time zone,
    "CreatedAt" timestamp with time zone NOT NULL,
    "UpdatedAt" timestamp with time zone,
    "IsDeleted" boolean NOT NULL,
    "CreatedById" text NOT NULL,
    "UpdatedById" text
);


ALTER TABLE db."RuleTriggers" OWNER TO postgres;

--
-- Name: Rules; Type: TABLE; Schema: db; Owner: postgres
--

CREATE TABLE db."Rules" (
    "Id" uuid NOT NULL,
    "Name" character varying(150) NOT NULL,
    "Description" character varying(150),
    "Condition" jsonb NOT NULL,
    "Action" jsonb NOT NULL,
    "IsActive" boolean NOT NULL,
    "CreatedAt" timestamp with time zone NOT NULL,
    "UpdatedAt" timestamp with time zone,
    "IsDeleted" boolean NOT NULL,
    "CreatedById" text NOT NULL,
    "UpdatedById" text
);


ALTER TABLE db."Rules" OWNER TO postgres;

--
-- Name: UserDevicePermissions; Type: TABLE; Schema: db; Owner: postgres
--

CREATE TABLE db."UserDevicePermissions" (
    "Id" uuid NOT NULL,
    "UserId" character varying(500) NOT NULL,
    "DeviceId" uuid NOT NULL,
    "PermissionLevel" character varying(150) NOT NULL,
    "CreatedAt" timestamp with time zone NOT NULL,
    "UpdatedAt" timestamp with time zone,
    "IsDeleted" boolean NOT NULL,
    "CreatedById" text NOT NULL,
    "UpdatedById" text
);


ALTER TABLE db."UserDevicePermissions" OWNER TO postgres;

--
-- Name: UserRoomPermissions; Type: TABLE; Schema: db; Owner: postgres
--

CREATE TABLE db."UserRoomPermissions" (
    "Id" uuid NOT NULL,
    "UserId" character varying(500) NOT NULL,
    "RoomId" uuid NOT NULL,
    "Permission" character varying(150) NOT NULL,
    "CreatedAt" timestamp with time zone NOT NULL,
    "UpdatedAt" timestamp with time zone,
    "IsDeleted" boolean NOT NULL,
    "CreatedById" text NOT NULL,
    "UpdatedById" text
);


ALTER TABLE db."UserRoomPermissions" OWNER TO postgres;

--
-- Name: UserSettings; Type: TABLE; Schema: db; Owner: postgres
--

CREATE TABLE db."UserSettings" (
    "UserId" character varying(500) NOT NULL,
    "Theme" character varying(150) NOT NULL,
    "Language" character varying(150) NOT NULL,
    "ShowOfflineDevices" boolean NOT NULL,
    "DefaultView" character varying(150) NOT NULL,
    "DashboardLayout" jsonb,
    "FavoriteDevices" jsonb,
    "QuickActions" jsonb,
    "EmailNotifications" boolean NOT NULL,
    "PushNotifications" boolean NOT NULL,
    "NotificationPreferences" jsonb,
    "DeviceDisplayPreferences" jsonb,
    "LastUsedDevices" jsonb,
    "RoomDisplayOrder" jsonb,
    "ShowEmptyRooms" boolean NOT NULL,
    "ShowAutomationSuggestions" boolean NOT NULL,
    "AutomationPreferences" jsonb,
    "Id" uuid NOT NULL,
    "CreatedAt" timestamp with time zone NOT NULL,
    "UpdatedAt" timestamp with time zone,
    "IsDeleted" boolean NOT NULL,
    "CreatedById" text NOT NULL,
    "UpdatedById" text
);


ALTER TABLE db."UserSettings" OWNER TO postgres;

--
-- Name: __EFMigrationsHistory; Type: TABLE; Schema: db; Owner: postgres
--

CREATE TABLE db."__EFMigrationsHistory" (
    "MigrationId" character varying(150) NOT NULL,
    "ProductVersion" character varying(32) NOT NULL
);


ALTER TABLE db."__EFMigrationsHistory" OWNER TO postgres;

--
-- Name: ApplicationUsers; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."ApplicationUsers" (
    "Id" text NOT NULL,
    "UserName" text NOT NULL,
    "Email" text,
    "FirstName" text,
    "LastName" text,
    "IsActive" boolean NOT NULL,
    "LastLogin" timestamp with time zone NOT NULL,
    "CreatedAt" timestamp with time zone NOT NULL,
    "UpdatedAt" timestamp with time zone,
    "IsDeleted" boolean NOT NULL,
    "CreatedById" text NOT NULL,
    "UpdatedById" text
);


ALTER TABLE public."ApplicationUsers" OWNER TO postgres;

--
-- Name: AspNetRoleClaims; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."AspNetRoleClaims" (
    "Id" integer NOT NULL,
    "RoleId" text NOT NULL,
    "ClaimType" text,
    "ClaimValue" text
);


ALTER TABLE public."AspNetRoleClaims" OWNER TO postgres;

--
-- Name: AspNetRoleClaims_Id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public."AspNetRoleClaims" ALTER COLUMN "Id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public."AspNetRoleClaims_Id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: AspNetRoles; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."AspNetRoles" (
    "Id" text NOT NULL,
    "Name" character varying(256),
    "NormalizedName" character varying(256),
    "ConcurrencyStamp" text
);


ALTER TABLE public."AspNetRoles" OWNER TO postgres;

--
-- Name: AspNetUserClaims; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."AspNetUserClaims" (
    "Id" integer NOT NULL,
    "UserId" text NOT NULL,
    "ClaimType" text,
    "ClaimValue" text
);


ALTER TABLE public."AspNetUserClaims" OWNER TO postgres;

--
-- Name: AspNetUserClaims_Id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public."AspNetUserClaims" ALTER COLUMN "Id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public."AspNetUserClaims_Id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: AspNetUserLogins; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."AspNetUserLogins" (
    "LoginProvider" text NOT NULL,
    "ProviderKey" text NOT NULL,
    "ProviderDisplayName" text,
    "UserId" text NOT NULL
);


ALTER TABLE public."AspNetUserLogins" OWNER TO postgres;

--
-- Name: AspNetUserRoles; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."AspNetUserRoles" (
    "UserId" text NOT NULL,
    "RoleId" text NOT NULL
);


ALTER TABLE public."AspNetUserRoles" OWNER TO postgres;

--
-- Name: AspNetUserTokens; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."AspNetUserTokens" (
    "UserId" text NOT NULL,
    "LoginProvider" text NOT NULL,
    "Name" text NOT NULL,
    "Value" text
);


ALTER TABLE public."AspNetUserTokens" OWNER TO postgres;

--
-- Name: AspNetUsers; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."AspNetUsers" (
    "Id" text NOT NULL,
    "UserName" character varying(256),
    "NormalizedUserName" character varying(256),
    "Email" character varying(256),
    "NormalizedEmail" character varying(256),
    "EmailConfirmed" boolean NOT NULL,
    "PasswordHash" text,
    "SecurityStamp" text,
    "ConcurrencyStamp" text,
    "PhoneNumber" text,
    "PhoneNumberConfirmed" boolean NOT NULL,
    "TwoFactorEnabled" boolean NOT NULL,
    "LockoutEnd" timestamp with time zone,
    "LockoutEnabled" boolean NOT NULL,
    "AccessFailedCount" integer NOT NULL
);


ALTER TABLE public."AspNetUsers" OWNER TO postgres;

--
-- Name: Clusters; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."Clusters" (
    "Id" uuid NOT NULL,
    "ClusterId" integer NOT NULL,
    "Name" character varying(100) NOT NULL,
    "Description" character varying(500),
    "Category" character varying(50),
    "IsRequired" boolean DEFAULT false NOT NULL,
    "IsOptional" boolean DEFAULT true NOT NULL,
    "MatterVersion" character varying(20),
    "Attributes" jsonb,
    "Commands" jsonb,
    "Events" jsonb,
    "CreatedAt" timestamp with time zone NOT NULL,
    "UpdatedAt" timestamp with time zone,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "CreatedById" character varying(500) NOT NULL,
    "UpdatedById" character varying(500)
);


ALTER TABLE public."Clusters" OWNER TO postgres;

--
-- Name: DeviceDeviceGroup; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."DeviceDeviceGroup" (
    "DeviceGroupsId" uuid NOT NULL,
    "DevicesId" uuid NOT NULL
);


ALTER TABLE public."DeviceDeviceGroup" OWNER TO postgres;

--
-- Name: DeviceEvents; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."DeviceEvents" (
    "Id" uuid NOT NULL,
    "DeviceId" uuid NOT NULL,
    "EventType" text NOT NULL,
    "EventData" jsonb,
    "CreatedAt" timestamp with time zone NOT NULL,
    "UpdatedAt" timestamp with time zone,
    "IsDeleted" boolean NOT NULL,
    "CreatedById" text NOT NULL,
    "UpdatedById" text
);


ALTER TABLE public."DeviceEvents" OWNER TO postgres;

--
-- Name: DeviceFirmwareUpdates; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."DeviceFirmwareUpdates" (
    "Id" uuid NOT NULL,
    "DeviceId" uuid NOT NULL,
    "FirmwareUpdateId" uuid NOT NULL,
    "CurrentVersion" character varying(50) NOT NULL,
    "TargetVersion" character varying(50) NOT NULL,
    "Status" character varying(20) DEFAULT 'pending'::character varying NOT NULL,
    "DownloadStartedAt" timestamp with time zone,
    "DownloadCompletedAt" timestamp with time zone,
    "InstallationStartedAt" timestamp with time zone,
    "InstallationCompletedAt" timestamp with time zone,
    "TestCompletedAt" timestamp with time zone,
    "TestPassed" boolean DEFAULT false NOT NULL,
    "ErrorMessage" character varying(500),
    "TestResults" jsonb,
    "IsConfirmed" boolean DEFAULT false NOT NULL,
    "ConfirmedAt" timestamp with time zone,
    "ConfirmedBy" character varying(50),
    "IsRollbackAvailable" boolean DEFAULT false NOT NULL,
    "RollbackCompletedAt" timestamp with time zone,
    "RollbackReason" character varying(500),
    "UpdateLog" jsonb,
    "CreatedAt" timestamp with time zone NOT NULL,
    "UpdatedAt" timestamp with time zone,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "CreatedById" character varying(500) NOT NULL,
    "UpdatedById" character varying(500)
);


ALTER TABLE public."DeviceFirmwareUpdates" OWNER TO postgres;

--
-- Name: DeviceGroupMembers; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."DeviceGroupMembers" (
    "DeviceId" uuid NOT NULL,
    "DeviceGroupId" uuid NOT NULL,
    "CreatedAt" timestamp with time zone NOT NULL,
    "UpdatedAt" timestamp with time zone,
    "IsDeleted" boolean NOT NULL,
    "CreatedById" text NOT NULL,
    "UpdatedById" text,
    "Comment" text
);


ALTER TABLE public."DeviceGroupMembers" OWNER TO postgres;

--
-- Name: DeviceGroups; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."DeviceGroups" (
    "Id" uuid NOT NULL,
    "Name" text NOT NULL,
    "Description" text,
    "RoomId" uuid,
    "CreatedAt" timestamp with time zone NOT NULL,
    "UpdatedAt" timestamp with time zone,
    "IsDeleted" boolean NOT NULL,
    "CreatedById" text NOT NULL,
    "UpdatedById" text,
    "DefaultCapabilities" jsonb,
    "Icon" text DEFAULT 'oi-device-hdd'::text,
    "PreferredCommissioningMethod" text DEFAULT 'BLE_WiFi'::text,
    "SortOrder" integer DEFAULT 0,
    "IsActive" boolean DEFAULT true
);


ALTER TABLE public."DeviceGroups" OWNER TO postgres;

--
-- Name: DeviceHistory; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."DeviceHistory" (
    "Id" uuid NOT NULL,
    "DeviceId" uuid NOT NULL,
    "EventType" text NOT NULL,
    "OldState" jsonb,
    "NewState" jsonb,
    "Description" text,
    "CreatedAt" timestamp with time zone NOT NULL,
    "UpdatedAt" timestamp with time zone,
    "IsDeleted" boolean NOT NULL,
    "CreatedById" text NOT NULL,
    "UpdatedById" text
);


ALTER TABLE public."DeviceHistory" OWNER TO postgres;

--
-- Name: DevicePropertyChanges; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."DevicePropertyChanges" (
    "Id" uuid NOT NULL,
    "DeviceId" uuid NOT NULL,
    "PropertyName" character varying(100) NOT NULL,
    "OldValue" jsonb,
    "NewValue" jsonb,
    "ChangeType" character varying(50) DEFAULT 'update'::character varying NOT NULL,
    "Reason" character varying(200),
    "ChangeTimestamp" timestamp with time zone NOT NULL,
    "IsConfirmed" boolean DEFAULT false NOT NULL,
    "ConfirmedAt" timestamp with time zone,
    "ConfirmedBy" character varying(50),
    "CreatedAt" timestamp with time zone NOT NULL,
    "UpdatedAt" timestamp with time zone,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "CreatedById" character varying(500) NOT NULL,
    "UpdatedById" character varying(500)
);


ALTER TABLE public."DevicePropertyChanges" OWNER TO postgres;

--
-- Name: DeviceStates; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."DeviceStates" (
    "Id" uuid NOT NULL,
    "DeviceId" uuid NOT NULL,
    "StateType" text NOT NULL,
    "StateValue" jsonb NOT NULL,
    "RecordedAt" timestamp with time zone NOT NULL,
    "CreatedAt" timestamp with time zone NOT NULL,
    "UpdatedAt" timestamp with time zone,
    "IsDeleted" boolean NOT NULL,
    "CreatedById" text NOT NULL,
    "UpdatedById" text
);


ALTER TABLE public."DeviceStates" OWNER TO postgres;

--
-- Name: DeviceTypes; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."DeviceTypes" (
    "Id" uuid NOT NULL,
    "Name" text NOT NULL,
    "Description" text,
    "Capabilities" jsonb NOT NULL,
    "IsSimulated" boolean NOT NULL,
    "CreatedAt" timestamp with time zone NOT NULL,
    "UpdatedAt" timestamp with time zone,
    "IsDeleted" boolean NOT NULL,
    "CreatedById" text NOT NULL,
    "UpdatedById" text,
    "DeviceGroupId" uuid,
    "Icon" text,
    "PreferredCommissioningMethod" text
);


ALTER TABLE public."DeviceTypes" OWNER TO postgres;

--
-- Name: Devices; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."Devices" (
    "Id" uuid NOT NULL,
    "Name" text NOT NULL,
    "Description" text,
    "MatterDeviceId" text,
    "DeviceTypeId" uuid NOT NULL,
    "RoomId" uuid,
    "Properties" jsonb NOT NULL,
    "Status" text NOT NULL,
    "Configuration" jsonb,
    "LastStateChange" timestamp with time zone NOT NULL,
    "IsOnline" boolean NOT NULL,
    "LastSeen" timestamp with time zone NOT NULL,
    "CreatedAt" timestamp with time zone NOT NULL,
    "UpdatedAt" timestamp with time zone,
    "IsDeleted" boolean NOT NULL,
    "CreatedById" text NOT NULL,
    "UpdatedById" text
);


ALTER TABLE public."Devices" OWNER TO postgres;

--
-- Name: EnvironmentalSettings; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."EnvironmentalSettings" (
    "Id" uuid NOT NULL,
    "UserId" text NOT NULL,
    "IndoorTemperatureMin" double precision NOT NULL,
    "IndoorTemperatureMax" double precision NOT NULL,
    "OutdoorTemperatureMin" double precision NOT NULL,
    "OutdoorTemperatureMax" double precision NOT NULL,
    "HumidityMin" double precision NOT NULL,
    "HumidityMax" double precision NOT NULL,
    "CO2Max" double precision NOT NULL,
    "VOCMax" double precision NOT NULL,
    "TemperatureWarning" double precision NOT NULL,
    "HumidityWarning" double precision NOT NULL,
    "LastUpdated" timestamp with time zone NOT NULL,
    "CreatedAt" timestamp with time zone NOT NULL,
    "UpdatedAt" timestamp with time zone,
    "IsDeleted" boolean NOT NULL,
    "CreatedById" text NOT NULL,
    "UpdatedById" text
);


ALTER TABLE public."EnvironmentalSettings" OWNER TO postgres;

--
-- Name: FirmwareUpdates; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."FirmwareUpdates" (
    "Id" uuid NOT NULL,
    "Name" character varying(100) NOT NULL,
    "Description" character varying(500),
    "CurrentVersion" character varying(50) NOT NULL,
    "TargetVersion" character varying(50) NOT NULL,
    "DownloadUrl" character varying(200),
    "FileName" character varying(100),
    "FileSize" bigint,
    "Checksum" character varying(100),
    "Status" character varying(20) DEFAULT 'available'::character varying NOT NULL,
    "DownloadStartedAt" timestamp with time zone,
    "DownloadCompletedAt" timestamp with time zone,
    "InstallationStartedAt" timestamp with time zone,
    "InstallationCompletedAt" timestamp with time zone,
    "ErrorMessage" character varying(500),
    "UpdateMetadata" jsonb,
    "IsCompatible" boolean DEFAULT true NOT NULL,
    "RequiresConfirmation" boolean DEFAULT false NOT NULL,
    "IsConfirmed" boolean DEFAULT false NOT NULL,
    "ConfirmedAt" timestamp with time zone,
    "ConfirmedBy" character varying(50),
    "CreatedAt" timestamp with time zone NOT NULL,
    "UpdatedAt" timestamp with time zone,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "CreatedById" character varying(500) NOT NULL,
    "UpdatedById" character varying(500)
);


ALTER TABLE public."FirmwareUpdates" OWNER TO postgres;

--
-- Name: GroupMembers; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."GroupMembers" (
    "GroupId" uuid NOT NULL,
    "DeviceId" uuid NOT NULL,
    "GroupId1" uuid NOT NULL,
    "DeviceId1" uuid NOT NULL,
    "Id" uuid NOT NULL,
    "CreatedAt" timestamp with time zone NOT NULL,
    "UpdatedAt" timestamp with time zone,
    "IsDeleted" boolean NOT NULL,
    "CreatedById" text NOT NULL,
    "UpdatedById" text
);


ALTER TABLE public."GroupMembers" OWNER TO postgres;

--
-- Name: GroupStateHistory; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."GroupStateHistory" (
    "Id" uuid NOT NULL,
    "GroupId" uuid NOT NULL,
    "GroupId1" uuid NOT NULL,
    "OldState" jsonb NOT NULL,
    "NewState" jsonb NOT NULL,
    "Description" text,
    "CreatedAt" timestamp with time zone NOT NULL,
    "UpdatedAt" timestamp with time zone,
    "IsDeleted" boolean NOT NULL,
    "CreatedById" text NOT NULL,
    "UpdatedById" text
);


ALTER TABLE public."GroupStateHistory" OWNER TO postgres;

--
-- Name: GroupStates; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."GroupStates" (
    "GroupId" uuid NOT NULL,
    "State" jsonb NOT NULL,
    "LastUpdated" timestamp with time zone NOT NULL,
    "Id" uuid NOT NULL,
    "CreatedAt" timestamp with time zone NOT NULL,
    "UpdatedAt" timestamp with time zone,
    "IsDeleted" boolean NOT NULL,
    "CreatedById" text NOT NULL,
    "UpdatedById" text
);


ALTER TABLE public."GroupStates" OWNER TO postgres;

--
-- Name: Groups; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."Groups" (
    "Id" uuid NOT NULL,
    "Name" text NOT NULL,
    "Description" text,
    "CreatedAt" timestamp with time zone NOT NULL,
    "UpdatedAt" timestamp with time zone,
    "IsDeleted" boolean NOT NULL,
    "CreatedById" text NOT NULL,
    "UpdatedById" text
);


ALTER TABLE public."Groups" OWNER TO postgres;

--
-- Name: Notifications; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."Notifications" (
    "Id" uuid NOT NULL,
    "UserId" text NOT NULL,
    "Message" text NOT NULL,
    "Type" integer NOT NULL,
    "Severity" integer,
    "IsRead" boolean NOT NULL,
    "ReadAt" timestamp with time zone,
    "CreatedAt" timestamp with time zone NOT NULL,
    "UpdatedAt" timestamp with time zone,
    "IsDeleted" boolean NOT NULL,
    "CreatedById" text NOT NULL,
    "UpdatedById" text
);


ALTER TABLE public."Notifications" OWNER TO postgres;

--
-- Name: Rooms; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."Rooms" (
    "Id" uuid NOT NULL,
    "Name" text NOT NULL,
    "Description" text,
    "Floor" integer,
    "CreatedAt" timestamp with time zone NOT NULL,
    "UpdatedAt" timestamp with time zone,
    "IsDeleted" boolean NOT NULL,
    "CreatedById" text NOT NULL,
    "UpdatedById" text
);


ALTER TABLE public."Rooms" OWNER TO postgres;

--
-- Name: RuleActions; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."RuleActions" (
    "Id" uuid NOT NULL,
    "RuleId" uuid NOT NULL,
    "RuleId1" uuid NOT NULL,
    "Action" jsonb NOT NULL,
    "Order" integer NOT NULL,
    "CreatedAt" timestamp with time zone NOT NULL,
    "UpdatedAt" timestamp with time zone,
    "IsDeleted" boolean NOT NULL,
    "CreatedById" text NOT NULL,
    "UpdatedById" text
);


ALTER TABLE public."RuleActions" OWNER TO postgres;

--
-- Name: RuleConditions; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."RuleConditions" (
    "Id" uuid NOT NULL,
    "RuleId" uuid NOT NULL,
    "RuleId1" uuid NOT NULL,
    "Condition" jsonb NOT NULL,
    "Order" integer NOT NULL,
    "CreatedAt" timestamp with time zone NOT NULL,
    "UpdatedAt" timestamp with time zone,
    "IsDeleted" boolean NOT NULL,
    "CreatedById" text NOT NULL,
    "UpdatedById" text
);


ALTER TABLE public."RuleConditions" OWNER TO postgres;

--
-- Name: RuleExecutionHistory; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."RuleExecutionHistory" (
    "Id" uuid NOT NULL,
    "RuleId" uuid NOT NULL,
    "RuleId1" uuid NOT NULL,
    "Success" boolean NOT NULL,
    "Result" jsonb,
    "ErrorMessage" text,
    "ExecutionTime" timestamp with time zone NOT NULL,
    "CreatedAt" timestamp with time zone NOT NULL,
    "UpdatedAt" timestamp with time zone,
    "IsDeleted" boolean NOT NULL,
    "CreatedById" text NOT NULL,
    "UpdatedById" text
);


ALTER TABLE public."RuleExecutionHistory" OWNER TO postgres;

--
-- Name: RuleTriggers; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."RuleTriggers" (
    "Id" uuid NOT NULL,
    "RuleId" uuid NOT NULL,
    "TriggerType" text NOT NULL,
    "Trigger" jsonb NOT NULL,
    "IsEnabled" boolean NOT NULL,
    "LastTriggered" timestamp with time zone,
    "RuleId1" uuid NOT NULL,
    "CreatedAt" timestamp with time zone NOT NULL,
    "UpdatedAt" timestamp with time zone,
    "IsDeleted" boolean NOT NULL,
    "CreatedById" text NOT NULL,
    "UpdatedById" text
);


ALTER TABLE public."RuleTriggers" OWNER TO postgres;

--
-- Name: Rules; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."Rules" (
    "Id" uuid NOT NULL,
    "Name" text NOT NULL,
    "Description" text,
    "Condition" jsonb NOT NULL,
    "Action" jsonb NOT NULL,
    "IsActive" boolean NOT NULL,
    "CreatedAt" timestamp with time zone NOT NULL,
    "UpdatedAt" timestamp with time zone,
    "IsDeleted" boolean NOT NULL,
    "CreatedById" text NOT NULL,
    "UpdatedById" text
);


ALTER TABLE public."Rules" OWNER TO postgres;

--
-- Name: UserDevicePermissions; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."UserDevicePermissions" (
    "Id" uuid NOT NULL,
    "UserId" text NOT NULL,
    "DeviceId" uuid NOT NULL,
    "PermissionLevel" text NOT NULL,
    "CreatedAt" timestamp with time zone NOT NULL,
    "UpdatedAt" timestamp with time zone,
    "IsDeleted" boolean NOT NULL,
    "CreatedById" text NOT NULL,
    "UpdatedById" text
);


ALTER TABLE public."UserDevicePermissions" OWNER TO postgres;

--
-- Name: UserRoomPermissions; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."UserRoomPermissions" (
    "Id" uuid NOT NULL,
    "UserId" text NOT NULL,
    "RoomId" uuid NOT NULL,
    "Permission" text NOT NULL,
    "CreatedAt" timestamp with time zone NOT NULL,
    "UpdatedAt" timestamp with time zone,
    "IsDeleted" boolean NOT NULL,
    "CreatedById" text NOT NULL,
    "UpdatedById" text
);


ALTER TABLE public."UserRoomPermissions" OWNER TO postgres;

--
-- Name: UserSettings; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."UserSettings" (
    "UserId" text NOT NULL,
    "Theme" text NOT NULL,
    "Language" text NOT NULL,
    "ShowOfflineDevices" boolean NOT NULL,
    "DefaultView" text NOT NULL,
    "DashboardLayout" jsonb,
    "FavoriteDevices" jsonb,
    "QuickActions" jsonb,
    "EmailNotifications" boolean NOT NULL,
    "PushNotifications" boolean NOT NULL,
    "NotificationPreferences" jsonb,
    "DeviceDisplayPreferences" jsonb,
    "LastUsedDevices" jsonb,
    "RoomDisplayOrder" jsonb,
    "ShowEmptyRooms" boolean NOT NULL,
    "ShowAutomationSuggestions" boolean NOT NULL,
    "AutomationPreferences" jsonb,
    "UserId1" text NOT NULL,
    "Id" uuid NOT NULL,
    "CreatedAt" timestamp with time zone NOT NULL,
    "UpdatedAt" timestamp with time zone,
    "IsDeleted" boolean NOT NULL,
    "CreatedById" text NOT NULL,
    "UpdatedById" text
);


ALTER TABLE public."UserSettings" OWNER TO postgres;

--
-- Name: __EFMigrationsHistory; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."__EFMigrationsHistory" (
    "MigrationId" character varying(150) NOT NULL,
    "ProductVersion" character varying(32) NOT NULL
);


ALTER TABLE public."__EFMigrationsHistory" OWNER TO postgres;

--
-- Data for Name: ApplicationUsers; Type: TABLE DATA; Schema: db; Owner: postgres
--

COPY db."ApplicationUsers" ("Id", "CreatedAt", "UpdatedAt", "IsDeleted", "CreatedById", "UpdatedById", "UserName", "Email", "FirstName", "LastName", "IsActive", "LastLogin") FROM stdin;
bb1be326-f26e-4684-bbf5-5c3df450dc61	2025-07-27 21:05:26.961571+00	2025-07-27 21:06:29.003431+00	f	bb1be326-f26e-4684-bbf5-5c3df450dc61	bb1be326-f26e-4684-bbf5-5c3df450dc61	system	system@msh.local	System	User	t	2025-07-27 21:06:29.003431+00
admin-user-id-1234-5678-9012-345678901234	2025-07-27 21:05:26.968293+00	2025-07-27 21:06:29.008029+00	f	bb1be326-f26e-4684-bbf5-5c3df450dc61	bb1be326-f26e-4684-bbf5-5c3df450dc61	admin	admin@msh.local	Admin	User	t	2025-07-27 21:06:29.008029+00
\.


--
-- Data for Name: AspNetRoleClaims; Type: TABLE DATA; Schema: db; Owner: postgres
--

COPY db."AspNetRoleClaims" ("Id", "RoleId", "ClaimType", "ClaimValue") FROM stdin;
\.


--
-- Data for Name: AspNetRoles; Type: TABLE DATA; Schema: db; Owner: postgres
--

COPY db."AspNetRoles" ("Id", "Name", "NormalizedName", "ConcurrencyStamp") FROM stdin;
admin-role-id	Admin	ADMIN	admin-role-stamp
standard-role-id	Standard	STANDARD	standard-role-stamp
guest-role-id	Guest	GUEST	guest-role-stamp
\.


--
-- Data for Name: AspNetUserClaims; Type: TABLE DATA; Schema: db; Owner: postgres
--

COPY db."AspNetUserClaims" ("Id", "UserId", "ClaimType", "ClaimValue") FROM stdin;
\.


--
-- Data for Name: AspNetUserLogins; Type: TABLE DATA; Schema: db; Owner: postgres
--

COPY db."AspNetUserLogins" ("LoginProvider", "ProviderKey", "ProviderDisplayName", "UserId") FROM stdin;
\.


--
-- Data for Name: AspNetUserRoles; Type: TABLE DATA; Schema: db; Owner: postgres
--

COPY db."AspNetUserRoles" ("UserId", "RoleId") FROM stdin;
admin-user-id-1234-5678-9012-345678901234	admin-role-id
\.


--
-- Data for Name: AspNetUserTokens; Type: TABLE DATA; Schema: db; Owner: postgres
--

COPY db."AspNetUserTokens" ("UserId", "LoginProvider", "Name", "Value") FROM stdin;
\.


--
-- Data for Name: AspNetUsers; Type: TABLE DATA; Schema: db; Owner: postgres
--

COPY db."AspNetUsers" ("Id", "UserName", "NormalizedUserName", "Email", "NormalizedEmail", "EmailConfirmed", "PasswordHash", "SecurityStamp", "ConcurrencyStamp", "PhoneNumber", "PhoneNumberConfirmed", "TwoFactorEnabled", "LockoutEnd", "LockoutEnabled", "AccessFailedCount") FROM stdin;
admin-user-id-1234-5678-9012-345678901234	admin@msh.local	ADMIN@MSH.LOCAL	admin@msh.local	ADMIN@MSH.LOCAL	t	AQAAAAEAACcQAAAAELbXpFJNk2p+Pj5KqON+u6I+UcWHcbu0TF+Z7JzQn1k=	5CFSE2STPI62ZURHZAL6SERB3QVGOMRZ	c8554266-b401-4a07-8a47-5a919162d79a	\N	f	f	\N	f	0
\.


--
-- Data for Name: Clusters; Type: TABLE DATA; Schema: db; Owner: postgres
--

COPY db."Clusters" ("Id", "ClusterId", "Name", "Description", "Category", "IsRequired", "IsOptional", "MatterVersion", "Attributes", "Commands", "Events", "CreatedAt", "UpdatedAt", "IsDeleted", "CreatedById", "UpdatedById") FROM stdin;
\.


--
-- Data for Name: DeviceDeviceGroup; Type: TABLE DATA; Schema: db; Owner: postgres
--

COPY db."DeviceDeviceGroup" ("DeviceGroupsId", "DevicesId") FROM stdin;
\.


--
-- Data for Name: DeviceEventLogs; Type: TABLE DATA; Schema: db; Owner: postgres
--

COPY db."DeviceEventLogs" ("Id", "DeviceId", "Event", "Timestamp", "Description", "EventType", "Severity", "EventData", "OldState", "NewState", "Source", "UserId", "CreatedAt", "UpdatedAt", "IsDeleted", "CreatedById", "UpdatedById") FROM stdin;
\.


--
-- Data for Name: DeviceEvents; Type: TABLE DATA; Schema: db; Owner: postgres
--

COPY db."DeviceEvents" ("Id", "DeviceId", "EventType", "EventData", "CreatedAt", "UpdatedAt", "IsDeleted", "CreatedById", "UpdatedById") FROM stdin;
\.


--
-- Data for Name: DeviceFirmwareUpdates; Type: TABLE DATA; Schema: db; Owner: postgres
--

COPY db."DeviceFirmwareUpdates" ("Id", "DeviceId", "FirmwareUpdateId", "CurrentVersion", "TargetVersion", "Status", "DownloadStartedAt", "DownloadCompletedAt", "InstallationStartedAt", "InstallationCompletedAt", "TestCompletedAt", "TestPassed", "ErrorMessage", "TestResults", "IsConfirmed", "ConfirmedAt", "ConfirmedBy", "IsRollbackAvailable", "RollbackCompletedAt", "RollbackReason", "UpdateLog", "CreatedAt", "UpdatedAt", "IsDeleted", "CreatedById", "UpdatedById") FROM stdin;
\.


--
-- Data for Name: DeviceGroups; Type: TABLE DATA; Schema: db; Owner: postgres
--

COPY db."DeviceGroups" ("Id", "Name", "Description", "Icon", "PreferredCommissioningMethod", "DefaultCapabilities", "SortOrder", "IsActive", "RoomId", "CreatedAt", "UpdatedAt", "IsDeleted", "CreatedById", "UpdatedById") FROM stdin;
ef743eff-8ff7-4243-b016-614c9c95a3c1	Smart Plugs & Sockets	Power control devices for appliances and lighting	oi-device-hdd	BLE_WiFi	\N	0	t	\N	2025-07-27 21:06:29.015946+00	2025-07-27 21:06:29.015946+00	f	bb1be326-f26e-4684-bbf5-5c3df450dc61	bb1be326-f26e-4684-bbf5-5c3df450dc61
c1734b3d-3daa-4327-8fc0-7b4724eb0cbb	Smart Lighting	LED bulbs, strips, and lighting controls	oi-device-hdd	BLE_WiFi	\N	0	t	\N	2025-07-27 21:06:29.015946+00	2025-07-27 21:06:29.015946+00	f	bb1be326-f26e-4684-bbf5-5c3df450dc61	bb1be326-f26e-4684-bbf5-5c3df450dc61
c4af0811-415d-4d69-a90d-b3276c2eaeb9	Smart Sensors	Environmental and security sensors	oi-device-hdd	BLE_WiFi	\N	0	t	\N	2025-07-27 21:06:29.015946+00	2025-07-27 21:06:29.015946+00	f	bb1be326-f26e-4684-bbf5-5c3df450dc61	bb1be326-f26e-4684-bbf5-5c3df450dc61
2ace4b05-3a79-4e93-98ec-998b943da87e	Smart Switches	Wall switches and dimmers	oi-device-hdd	BLE_WiFi	\N	0	t	\N	2025-07-27 21:06:29.015946+00	2025-07-27 21:06:29.015946+00	f	bb1be326-f26e-4684-bbf5-5c3df450dc61	bb1be326-f26e-4684-bbf5-5c3df450dc61
75b43d94-7161-48aa-8108-3e9ef13cca26	Other Devices	Other Matter-compatible devices	oi-device-hdd	BLE_WiFi	\N	0	t	\N	2025-07-27 21:06:29.015946+00	2025-07-27 21:06:29.015946+00	f	bb1be326-f26e-4684-bbf5-5c3df450dc61	bb1be326-f26e-4684-bbf5-5c3df450dc61
\.


--
-- Data for Name: DeviceHistory; Type: TABLE DATA; Schema: db; Owner: postgres
--

COPY db."DeviceHistory" ("Id", "DeviceId", "EventType", "OldState", "NewState", "Description", "CreatedAt", "UpdatedAt", "IsDeleted", "CreatedById", "UpdatedById") FROM stdin;
\.


--
-- Data for Name: DevicePropertyChanges; Type: TABLE DATA; Schema: db; Owner: postgres
--

COPY db."DevicePropertyChanges" ("Id", "DeviceId", "PropertyName", "OldValue", "NewValue", "ChangeType", "Reason", "ChangeTimestamp", "IsConfirmed", "ConfirmedAt", "ConfirmedBy", "CreatedAt", "UpdatedAt", "IsDeleted", "CreatedById", "UpdatedById") FROM stdin;
\.


--
-- Data for Name: DeviceStates; Type: TABLE DATA; Schema: db; Owner: postgres
--

COPY db."DeviceStates" ("Id", "DeviceId", "StateType", "StateValue", "RecordedAt", "CreatedAt", "UpdatedAt", "IsDeleted", "CreatedById", "UpdatedById") FROM stdin;
\.


--
-- Data for Name: DeviceTypes; Type: TABLE DATA; Schema: db; Owner: postgres
--

COPY db."DeviceTypes" ("Id", "Name", "Description", "Capabilities", "IsSimulated", "Icon", "PreferredCommissioningMethod", "DeviceGroupId", "CreatedAt", "UpdatedAt", "IsDeleted", "CreatedById", "UpdatedById") FROM stdin;
00269a40-4765-4fb8-ab23-95d5b9cd5ae0	Smart Plug	Matter-compatible smart plug with power monitoring	{"on_off": true, "power_monitoring": true}	f	oi-device-hdd	BLE_WiFi	\N	2025-07-27 21:05:26.977434+00	2025-07-27 21:05:26.977434+00	f	bb1be326-f26e-4684-bbf5-5c3df450dc61	bb1be326-f26e-4684-bbf5-5c3df450dc61
e538939c-bd7f-444e-9d12-aebb0652f5e3	Smart Switch	Matter-compatible smart switch	{"on_off": true}	f	oi-device-hdd	BLE_WiFi	\N	2025-07-27 21:05:26.977434+00	2025-07-27 21:05:26.977434+00	f	bb1be326-f26e-4684-bbf5-5c3df450dc61	bb1be326-f26e-4684-bbf5-5c3df450dc61
5be3439a-2231-4b46-8c61-65ab2faddaa3	Smart Bulb	Matter-compatible smart bulb with color control	{"on_off": true, "color_control": true}	f	oi-device-hdd	BLE_WiFi	\N	2025-07-27 21:05:26.977434+00	2025-07-27 21:05:26.977434+00	f	bb1be326-f26e-4684-bbf5-5c3df450dc61	bb1be326-f26e-4684-bbf5-5c3df450dc61
c9235be2-412f-450e-88eb-21eaab660ccf	NOUS A8M Socket	NOUS A8M 16A Smart Socket with Matter support	{"onOff": true, "maxPower": 3680, "powerMonitoring": true, "energyMonitoring": true}	f	oi-device-hdd	BLE_WiFi	\N	2025-07-27 21:05:26.977434+00	2025-07-27 21:05:26.977434+00	f	bb1be326-f26e-4684-bbf5-5c3df450dc61	bb1be326-f26e-4684-bbf5-5c3df450dc61
4ef22bd5-1f58-43d8-8824-559cbba714f2	Temperature Sensor	Matter-compatible temperature sensor	{"humidity": true, "temperature": true}	f	oi-device-hdd	BLE_WiFi	\N	2025-07-27 21:05:26.977434+00	2025-07-27 21:05:26.977434+00	f	bb1be326-f26e-4684-bbf5-5c3df450dc61	bb1be326-f26e-4684-bbf5-5c3df450dc61
af3a50bc-6a08-48aa-9497-ff3aff8c3ce8	Motion Sensor	Matter-compatible motion sensor	{"motion": true, "occupancy": true}	f	oi-device-hdd	BLE_WiFi	\N	2025-07-27 21:05:26.977434+00	2025-07-27 21:05:26.977434+00	f	bb1be326-f26e-4684-bbf5-5c3df450dc61	bb1be326-f26e-4684-bbf5-5c3df450dc61
1e9153e0-3609-479c-a87c-20412f12525a	Smart Plug	Matter-compatible smart plug with power monitoring	{"on_off": true, "power_monitoring": true}	f	oi-device-hdd	BLE_WiFi	\N	2025-07-27 21:06:29.021368+00	2025-07-27 21:06:29.021368+00	f	bb1be326-f26e-4684-bbf5-5c3df450dc61	bb1be326-f26e-4684-bbf5-5c3df450dc61
8f8949d8-5aae-48b0-971f-d8a231e9e95e	Smart Switch	Matter-compatible smart switch	{"on_off": true}	f	oi-device-hdd	BLE_WiFi	\N	2025-07-27 21:06:29.021368+00	2025-07-27 21:06:29.021368+00	f	bb1be326-f26e-4684-bbf5-5c3df450dc61	bb1be326-f26e-4684-bbf5-5c3df450dc61
ec533e31-88bd-4366-9203-b5fb62507c2a	Smart Bulb	Matter-compatible smart bulb with color control	{"on_off": true, "color_control": true}	f	oi-device-hdd	BLE_WiFi	\N	2025-07-27 21:06:29.021368+00	2025-07-27 21:06:29.021368+00	f	bb1be326-f26e-4684-bbf5-5c3df450dc61	bb1be326-f26e-4684-bbf5-5c3df450dc61
2d070c66-0d6c-4100-8ac9-db67797a7a8b	NOUS A8M Socket	NOUS A8M 16A Smart Socket with Matter support	{"onOff": true, "maxPower": 3680, "powerMonitoring": true, "energyMonitoring": true}	f	oi-device-hdd	BLE_WiFi	\N	2025-07-27 21:06:29.021368+00	2025-07-27 21:06:29.021368+00	f	bb1be326-f26e-4684-bbf5-5c3df450dc61	bb1be326-f26e-4684-bbf5-5c3df450dc61
01ccb8d9-29fd-4690-b84f-ab6556e38947	Temperature Sensor	Matter-compatible temperature sensor	{"humidity": true, "temperature": true}	f	oi-device-hdd	BLE_WiFi	\N	2025-07-27 21:06:29.021368+00	2025-07-27 21:06:29.021368+00	f	bb1be326-f26e-4684-bbf5-5c3df450dc61	bb1be326-f26e-4684-bbf5-5c3df450dc61
8964f520-764b-40b1-b34a-d08d7d34d49d	Motion Sensor	Matter-compatible motion sensor	{"motion": true, "occupancy": true}	f	oi-device-hdd	BLE_WiFi	\N	2025-07-27 21:06:29.021368+00	2025-07-27 21:06:29.021368+00	f	bb1be326-f26e-4684-bbf5-5c3df450dc61	bb1be326-f26e-4684-bbf5-5c3df450dc61
\.


--
-- Data for Name: Devices; Type: TABLE DATA; Schema: db; Owner: postgres
--

COPY db."Devices" ("Id", "Name", "Description", "MatterDeviceId", "DeviceTypeId", "RoomId", "Properties", "Status", "Configuration", "LastStateChange", "IsOnline", "LastSeen", "CreatedAt", "UpdatedAt", "IsDeleted", "CreatedById", "UpdatedById") FROM stdin;
196c7b82-bf71-4e88-b714-0354c2d06c04	Office Socket 1	NOUS A8M Smart Socket - Office Area	4328ED19954E9DC0	c9235be2-412f-450e-88eb-21eaab660ccf	64f82b49-f0d5-4025-8646-2e1a12f8baa2	{"model": "A8M", "clusters": [3, 4, 6, 29], "device_type": 266, "manufacturer": "NOUS", "matter_version": "1.0", "device_revision": 2, "cluster_revision": 1}	online	{}	2025-08-17 20:59:54.301596+00	t	2025-08-17 20:59:54.301596+00	2025-08-17 20:59:54.301596+00	2025-08-19 18:41:59.35248+00	f	bb1be326-f26e-4684-bbf5-5c3df450dc61	bb1be326-f26e-4684-bbf5-5c3df450dc61
083c779a-e717-4361-8183-4146414c2f48	Office Socket 2	NOUS A8M Smart Socket - Office Area	4328ED19954E9DC1	c9235be2-412f-450e-88eb-21eaab660ccf	64f82b49-f0d5-4025-8646-2e1a12f8baa2	{"model": "A8M", "clusters": [3, 4, 6, 29], "device_type": 266, "manufacturer": "NOUS", "matter_version": "1.0", "device_revision": 2, "cluster_revision": 1}	online	{}	2025-08-17 21:01:09.465949+00	t	2025-08-17 21:01:09.465949+00	2025-08-17 21:01:09.465949+00	2025-08-19 19:01:04.364835+00	f	bb1be326-f26e-4684-bbf5-5c3df450dc61	bb1be326-f26e-4684-bbf5-5c3df450dc61
\.


--
-- Data for Name: EnvironmentalSettings; Type: TABLE DATA; Schema: db; Owner: postgres
--

COPY db."EnvironmentalSettings" ("Id", "UserId", "IndoorTemperatureMin", "IndoorTemperatureMax", "OutdoorTemperatureMin", "OutdoorTemperatureMax", "HumidityMin", "HumidityMax", "CO2Max", "VOCMax", "TemperatureWarning", "HumidityWarning", "LastUpdated", "CreatedAt", "UpdatedAt", "IsDeleted", "CreatedById", "UpdatedById") FROM stdin;
\.


--
-- Data for Name: FirmwareUpdates; Type: TABLE DATA; Schema: db; Owner: postgres
--

COPY db."FirmwareUpdates" ("Id", "Name", "Description", "CurrentVersion", "TargetVersion", "DownloadUrl", "FileName", "FileSize", "Checksum", "Status", "DownloadStartedAt", "DownloadCompletedAt", "InstallationStartedAt", "InstallationCompletedAt", "ErrorMessage", "UpdateMetadata", "IsCompatible", "RequiresConfirmation", "IsConfirmed", "ConfirmedAt", "ConfirmedBy", "CreatedAt", "UpdatedAt", "IsDeleted", "CreatedById", "UpdatedById") FROM stdin;
fb7da25d-2744-4ff7-8d2c-a9c7003928e1	Test Firmware Update	Test firmware update for API testing	1.0.0	1.1.0	https://example.com/firmware/test.bin	test_firmware_1.1.0.bin	1048576	abc123def456	available	\N	\N	\N	\N	\N	\N	t	f	f	\N	\N	2025-08-23 15:06:30.449783+00	2025-08-23 15:06:30.450334+00	f	bb1be326-f26e-4684-bbf5-5c3df450dc61	bb1be326-f26e-4684-bbf5-5c3df450dc61
\.


--
-- Data for Name: GroupMembers; Type: TABLE DATA; Schema: db; Owner: postgres
--

COPY db."GroupMembers" ("GroupId", "DeviceId", "Id", "CreatedAt", "UpdatedAt", "IsDeleted", "CreatedById", "UpdatedById") FROM stdin;
\.


--
-- Data for Name: GroupStateHistory; Type: TABLE DATA; Schema: db; Owner: postgres
--

COPY db."GroupStateHistory" ("Id", "GroupId", "OldState", "NewState", "Description", "CreatedAt", "UpdatedAt", "IsDeleted", "CreatedById", "UpdatedById") FROM stdin;
\.


--
-- Data for Name: GroupStates; Type: TABLE DATA; Schema: db; Owner: postgres
--

COPY db."GroupStates" ("GroupId", "State", "LastUpdated", "Id", "CreatedAt", "UpdatedAt", "IsDeleted", "CreatedById", "UpdatedById") FROM stdin;
\.


--
-- Data for Name: Groups; Type: TABLE DATA; Schema: db; Owner: postgres
--

COPY db."Groups" ("Id", "Name", "Description", "CreatedAt", "UpdatedAt", "IsDeleted", "CreatedById", "UpdatedById") FROM stdin;
\.


--
-- Data for Name: Notifications; Type: TABLE DATA; Schema: db; Owner: postgres
--

COPY db."Notifications" ("Id", "UserId", "Message", "Type", "Severity", "IsRead", "ReadAt", "CreatedAt", "UpdatedAt", "IsDeleted", "CreatedById", "UpdatedById") FROM stdin;
\.


--
-- Data for Name: Rooms; Type: TABLE DATA; Schema: db; Owner: postgres
--

COPY db."Rooms" ("Id", "Name", "Description", "Floor", "CreatedAt", "UpdatedAt", "IsDeleted", "CreatedById", "UpdatedById") FROM stdin;
40fbaeab-200b-46dc-9098-486b47b1d3e6	Living Room	Main living area	1	2025-07-27 21:05:26.970972+00	2025-07-27 21:05:26.970972+00	f	bb1be326-f26e-4684-bbf5-5c3df450dc61	bb1be326-f26e-4684-bbf5-5c3df450dc61
cbe6c554-1b35-4872-b064-ff7545962a8c	Kitchen	Kitchen area	1	2025-07-27 21:05:26.970972+00	2025-07-27 21:05:26.970972+00	f	bb1be326-f26e-4684-bbf5-5c3df450dc61	bb1be326-f26e-4684-bbf5-5c3df450dc61
c134bccd-0158-4b47-940d-355a5584ffba	Bedroom	Bedroom area	1	2025-07-27 21:05:26.970972+00	2025-07-27 21:05:26.970972+00	f	bb1be326-f26e-4684-bbf5-5c3df450dc61	bb1be326-f26e-4684-bbf5-5c3df450dc61
f524a365-46c8-4599-aba8-c90e2385af93	Bathroom	Bathroom area	1	2025-07-27 21:05:26.970972+00	2025-07-27 21:05:26.970972+00	f	bb1be326-f26e-4684-bbf5-5c3df450dc61	bb1be326-f26e-4684-bbf5-5c3df450dc61
64f82b49-f0d5-4025-8646-2e1a12f8baa2	Office	Office Base Floor	0	2025-08-18 20:13:46.618856+00	2025-08-18 20:13:46.619468+00	f	admin-user-id-1234-5678-9012-345678901234	admin-user-id-1234-5678-9012-345678901234
\.


--
-- Data for Name: RuleActions; Type: TABLE DATA; Schema: db; Owner: postgres
--

COPY db."RuleActions" ("Id", "RuleId", "Action", "Order", "CreatedAt", "UpdatedAt", "IsDeleted", "CreatedById", "UpdatedById") FROM stdin;
\.


--
-- Data for Name: RuleConditions; Type: TABLE DATA; Schema: db; Owner: postgres
--

COPY db."RuleConditions" ("Id", "RuleId", "Condition", "Order", "CreatedAt", "UpdatedAt", "IsDeleted", "CreatedById", "UpdatedById") FROM stdin;
\.


--
-- Data for Name: RuleExecutionHistory; Type: TABLE DATA; Schema: db; Owner: postgres
--

COPY db."RuleExecutionHistory" ("Id", "RuleId", "Success", "Result", "ErrorMessage", "ExecutionTime", "CreatedAt", "UpdatedAt", "IsDeleted", "CreatedById", "UpdatedById") FROM stdin;
\.


--
-- Data for Name: RuleTriggers; Type: TABLE DATA; Schema: db; Owner: postgres
--

COPY db."RuleTriggers" ("Id", "RuleId", "TriggerType", "Trigger", "IsEnabled", "LastTriggered", "CreatedAt", "UpdatedAt", "IsDeleted", "CreatedById", "UpdatedById") FROM stdin;
\.


--
-- Data for Name: Rules; Type: TABLE DATA; Schema: db; Owner: postgres
--

COPY db."Rules" ("Id", "Name", "Description", "Condition", "Action", "IsActive", "CreatedAt", "UpdatedAt", "IsDeleted", "CreatedById", "UpdatedById") FROM stdin;
\.


--
-- Data for Name: UserDevicePermissions; Type: TABLE DATA; Schema: db; Owner: postgres
--

COPY db."UserDevicePermissions" ("Id", "UserId", "DeviceId", "PermissionLevel", "CreatedAt", "UpdatedAt", "IsDeleted", "CreatedById", "UpdatedById") FROM stdin;
\.


--
-- Data for Name: UserRoomPermissions; Type: TABLE DATA; Schema: db; Owner: postgres
--

COPY db."UserRoomPermissions" ("Id", "UserId", "RoomId", "Permission", "CreatedAt", "UpdatedAt", "IsDeleted", "CreatedById", "UpdatedById") FROM stdin;
\.


--
-- Data for Name: UserSettings; Type: TABLE DATA; Schema: db; Owner: postgres
--

COPY db."UserSettings" ("UserId", "Theme", "Language", "ShowOfflineDevices", "DefaultView", "DashboardLayout", "FavoriteDevices", "QuickActions", "EmailNotifications", "PushNotifications", "NotificationPreferences", "DeviceDisplayPreferences", "LastUsedDevices", "RoomDisplayOrder", "ShowEmptyRooms", "ShowAutomationSuggestions", "AutomationPreferences", "Id", "CreatedAt", "UpdatedAt", "IsDeleted", "CreatedById", "UpdatedById") FROM stdin;
\.


--
-- Data for Name: __EFMigrationsHistory; Type: TABLE DATA; Schema: db; Owner: postgres
--

COPY db."__EFMigrationsHistory" ("MigrationId", "ProductVersion") FROM stdin;
20250823112915_InitialDbSchemaBaseline	8.0.2
20250823115320_AddFirmwareAndClusterEntities	8.0.2
\.


--
-- Data for Name: ApplicationUsers; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."ApplicationUsers" ("Id", "UserName", "Email", "FirstName", "LastName", "IsActive", "LastLogin", "CreatedAt", "UpdatedAt", "IsDeleted", "CreatedById", "UpdatedById") FROM stdin;
bb1be326-f26e-4684-bbf5-5c3df450dc61	system	system@msh.local	System	User	t	2025-07-27 21:06:29.003431+00	2025-07-27 21:05:26.961571+00	2025-07-27 21:06:29.003431+00	f	bb1be326-f26e-4684-bbf5-5c3df450dc61	bb1be326-f26e-4684-bbf5-5c3df450dc61
admin-user-id-1234-5678-9012-345678901234	admin	admin@msh.local	Admin	User	t	2025-07-27 21:06:29.008029+00	2025-07-27 21:05:26.968293+00	2025-07-27 21:06:29.008029+00	f	bb1be326-f26e-4684-bbf5-5c3df450dc61	bb1be326-f26e-4684-bbf5-5c3df450dc61
\.


--
-- Data for Name: AspNetRoleClaims; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."AspNetRoleClaims" ("Id", "RoleId", "ClaimType", "ClaimValue") FROM stdin;
\.


--
-- Data for Name: AspNetRoles; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."AspNetRoles" ("Id", "Name", "NormalizedName", "ConcurrencyStamp") FROM stdin;
admin-role-id	Admin	ADMIN	admin-role-stamp
standard-role-id	Standard	STANDARD	standard-role-stamp
guest-role-id	Guest	GUEST	guest-role-stamp
\.


--
-- Data for Name: AspNetUserClaims; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."AspNetUserClaims" ("Id", "UserId", "ClaimType", "ClaimValue") FROM stdin;
\.


--
-- Data for Name: AspNetUserLogins; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."AspNetUserLogins" ("LoginProvider", "ProviderKey", "ProviderDisplayName", "UserId") FROM stdin;
\.


--
-- Data for Name: AspNetUserRoles; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."AspNetUserRoles" ("UserId", "RoleId") FROM stdin;
admin-user-id-1234-5678-9012-345678901234	admin-role-id
\.


--
-- Data for Name: AspNetUserTokens; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."AspNetUserTokens" ("UserId", "LoginProvider", "Name", "Value") FROM stdin;
\.


--
-- Data for Name: AspNetUsers; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."AspNetUsers" ("Id", "UserName", "NormalizedUserName", "Email", "NormalizedEmail", "EmailConfirmed", "PasswordHash", "SecurityStamp", "ConcurrencyStamp", "PhoneNumber", "PhoneNumberConfirmed", "TwoFactorEnabled", "LockoutEnd", "LockoutEnabled", "AccessFailedCount") FROM stdin;
admin-user-id-1234-5678-9012-345678901234	admin@msh.local	ADMIN@MSH.LOCAL	admin@msh.local	ADMIN@MSH.LOCAL	t	AQAAAAEAACcQAAAAELbXpFJNk2p+Pj5KqON+u6I+UcWHcbu0TF+Z7JzQn1k=	5CFSE2STPI62ZURHZAL6SERB3QVGOMRZ	c8554266-b401-4a07-8a47-5a919162d79a	\N	f	f	\N	f	0
\.


--
-- Data for Name: Clusters; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."Clusters" ("Id", "ClusterId", "Name", "Description", "Category", "IsRequired", "IsOptional", "MatterVersion", "Attributes", "Commands", "Events", "CreatedAt", "UpdatedAt", "IsDeleted", "CreatedById", "UpdatedById") FROM stdin;
38793a57-25b4-44cd-816c-fa92bbd11742	3	Identify	Identify cluster for device identification	Basic	t	f	1.0	\N	\N	\N	2025-08-23 10:24:26.334547+00	\N	f	bb1be326-f26e-4684-bbf5-5c3df450dc61	\N
b172f0fb-5f20-4e5e-b63b-4ef32a54beca	4	Groups	Groups cluster for device grouping	Basic	t	f	1.0	\N	\N	\N	2025-08-23 10:24:26.334547+00	\N	f	bb1be326-f26e-4684-bbf5-5c3df450dc61	\N
44dc7bbe-1f6b-4e72-8c96-be348b7b6ebf	6	OnOff	OnOff cluster for device power control	Control	t	f	1.0	\N	\N	\N	2025-08-23 10:24:26.334547+00	\N	f	bb1be326-f26e-4684-bbf5-5c3df450dc61	\N
45d70e98-2bb7-47b3-ba42-7468380a84aa	29	Descriptor	Descriptor cluster for device information	Basic	t	f	1.0	\N	\N	\N	2025-08-23 10:24:26.334547+00	\N	f	bb1be326-f26e-4684-bbf5-5c3df450dc61	\N
89b3dfe6-8f73-4576-ad15-b19fa8975a9f	2820	Electrical Measurement	Electrical measurement cluster for energy monitoring	Measurement	f	t	1.3	\N	\N	\N	2025-08-23 10:24:26.334547+00	\N	f	bb1be326-f26e-4684-bbf5-5c3df450dc61	\N
\.


--
-- Data for Name: DeviceDeviceGroup; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."DeviceDeviceGroup" ("DeviceGroupsId", "DevicesId") FROM stdin;
\.


--
-- Data for Name: DeviceEvents; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."DeviceEvents" ("Id", "DeviceId", "EventType", "EventData", "CreatedAt", "UpdatedAt", "IsDeleted", "CreatedById", "UpdatedById") FROM stdin;
\.


--
-- Data for Name: DeviceFirmwareUpdates; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."DeviceFirmwareUpdates" ("Id", "DeviceId", "FirmwareUpdateId", "CurrentVersion", "TargetVersion", "Status", "DownloadStartedAt", "DownloadCompletedAt", "InstallationStartedAt", "InstallationCompletedAt", "TestCompletedAt", "TestPassed", "ErrorMessage", "TestResults", "IsConfirmed", "ConfirmedAt", "ConfirmedBy", "IsRollbackAvailable", "RollbackCompletedAt", "RollbackReason", "UpdateLog", "CreatedAt", "UpdatedAt", "IsDeleted", "CreatedById", "UpdatedById") FROM stdin;
\.


--
-- Data for Name: DeviceGroupMembers; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."DeviceGroupMembers" ("DeviceId", "DeviceGroupId", "CreatedAt", "UpdatedAt", "IsDeleted", "CreatedById", "UpdatedById", "Comment") FROM stdin;
\.


--
-- Data for Name: DeviceGroups; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."DeviceGroups" ("Id", "Name", "Description", "RoomId", "CreatedAt", "UpdatedAt", "IsDeleted", "CreatedById", "UpdatedById", "DefaultCapabilities", "Icon", "PreferredCommissioningMethod", "SortOrder", "IsActive") FROM stdin;
ef743eff-8ff7-4243-b016-614c9c95a3c1	Smart Plugs & Sockets	Power control devices for appliances and lighting	\N	2025-07-27 21:06:29.015946+00	2025-07-27 21:06:29.015946+00	f	bb1be326-f26e-4684-bbf5-5c3df450dc61	bb1be326-f26e-4684-bbf5-5c3df450dc61	\N	oi-device-hdd	BLE_WiFi	0	t
c1734b3d-3daa-4327-8fc0-7b4724eb0cbb	Smart Lighting	LED bulbs, strips, and lighting controls	\N	2025-07-27 21:06:29.015946+00	2025-07-27 21:06:29.015946+00	f	bb1be326-f26e-4684-bbf5-5c3df450dc61	bb1be326-f26e-4684-bbf5-5c3df450dc61	\N	oi-device-hdd	BLE_WiFi	0	t
c4af0811-415d-4d69-a90d-b3276c2eaeb9	Smart Sensors	Environmental and security sensors	\N	2025-07-27 21:06:29.015946+00	2025-07-27 21:06:29.015946+00	f	bb1be326-f26e-4684-bbf5-5c3df450dc61	bb1be326-f26e-4684-bbf5-5c3df450dc61	\N	oi-device-hdd	BLE_WiFi	0	t
2ace4b05-3a79-4e93-98ec-998b943da87e	Smart Switches	Wall switches and dimmers	\N	2025-07-27 21:06:29.015946+00	2025-07-27 21:06:29.015946+00	f	bb1be326-f26e-4684-bbf5-5c3df450dc61	bb1be326-f26e-4684-bbf5-5c3df450dc61	\N	oi-device-hdd	BLE_WiFi	0	t
75b43d94-7161-48aa-8108-3e9ef13cca26	Other Devices	Other Matter-compatible devices	\N	2025-07-27 21:06:29.015946+00	2025-07-27 21:06:29.015946+00	f	bb1be326-f26e-4684-bbf5-5c3df450dc61	bb1be326-f26e-4684-bbf5-5c3df450dc61	\N	oi-device-hdd	BLE_WiFi	0	t
\.


--
-- Data for Name: DeviceHistory; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."DeviceHistory" ("Id", "DeviceId", "EventType", "OldState", "NewState", "Description", "CreatedAt", "UpdatedAt", "IsDeleted", "CreatedById", "UpdatedById") FROM stdin;
\.


--
-- Data for Name: DevicePropertyChanges; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."DevicePropertyChanges" ("Id", "DeviceId", "PropertyName", "OldValue", "NewValue", "ChangeType", "Reason", "ChangeTimestamp", "IsConfirmed", "ConfirmedAt", "ConfirmedBy", "CreatedAt", "UpdatedAt", "IsDeleted", "CreatedById", "UpdatedById") FROM stdin;
\.


--
-- Data for Name: DeviceStates; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."DeviceStates" ("Id", "DeviceId", "StateType", "StateValue", "RecordedAt", "CreatedAt", "UpdatedAt", "IsDeleted", "CreatedById", "UpdatedById") FROM stdin;
\.


--
-- Data for Name: DeviceTypes; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."DeviceTypes" ("Id", "Name", "Description", "Capabilities", "IsSimulated", "CreatedAt", "UpdatedAt", "IsDeleted", "CreatedById", "UpdatedById", "DeviceGroupId", "Icon", "PreferredCommissioningMethod") FROM stdin;
00269a40-4765-4fb8-ab23-95d5b9cd5ae0	Smart Plug	Matter-compatible smart plug with power monitoring	{"on_off": true, "power_monitoring": true}	f	2025-07-27 21:05:26.977434+00	2025-07-27 21:05:26.977434+00	f	bb1be326-f26e-4684-bbf5-5c3df450dc61	bb1be326-f26e-4684-bbf5-5c3df450dc61	\N	oi-device-hdd	BLE_WiFi
e538939c-bd7f-444e-9d12-aebb0652f5e3	Smart Switch	Matter-compatible smart switch	{"on_off": true}	f	2025-07-27 21:05:26.977434+00	2025-07-27 21:05:26.977434+00	f	bb1be326-f26e-4684-bbf5-5c3df450dc61	bb1be326-f26e-4684-bbf5-5c3df450dc61	\N	oi-device-hdd	BLE_WiFi
5be3439a-2231-4b46-8c61-65ab2faddaa3	Smart Bulb	Matter-compatible smart bulb with color control	{"on_off": true, "color_control": true}	f	2025-07-27 21:05:26.977434+00	2025-07-27 21:05:26.977434+00	f	bb1be326-f26e-4684-bbf5-5c3df450dc61	bb1be326-f26e-4684-bbf5-5c3df450dc61	\N	oi-device-hdd	BLE_WiFi
c9235be2-412f-450e-88eb-21eaab660ccf	NOUS A8M Socket	NOUS A8M 16A Smart Socket with Matter support	{"onOff": true, "maxPower": 3680, "powerMonitoring": true, "energyMonitoring": true}	f	2025-07-27 21:05:26.977434+00	2025-07-27 21:05:26.977434+00	f	bb1be326-f26e-4684-bbf5-5c3df450dc61	bb1be326-f26e-4684-bbf5-5c3df450dc61	\N	oi-device-hdd	BLE_WiFi
4ef22bd5-1f58-43d8-8824-559cbba714f2	Temperature Sensor	Matter-compatible temperature sensor	{"humidity": true, "temperature": true}	f	2025-07-27 21:05:26.977434+00	2025-07-27 21:05:26.977434+00	f	bb1be326-f26e-4684-bbf5-5c3df450dc61	bb1be326-f26e-4684-bbf5-5c3df450dc61	\N	oi-device-hdd	BLE_WiFi
af3a50bc-6a08-48aa-9497-ff3aff8c3ce8	Motion Sensor	Matter-compatible motion sensor	{"motion": true, "occupancy": true}	f	2025-07-27 21:05:26.977434+00	2025-07-27 21:05:26.977434+00	f	bb1be326-f26e-4684-bbf5-5c3df450dc61	bb1be326-f26e-4684-bbf5-5c3df450dc61	\N	oi-device-hdd	BLE_WiFi
1e9153e0-3609-479c-a87c-20412f12525a	Smart Plug	Matter-compatible smart plug with power monitoring	{"on_off": true, "power_monitoring": true}	f	2025-07-27 21:06:29.021368+00	2025-07-27 21:06:29.021368+00	f	bb1be326-f26e-4684-bbf5-5c3df450dc61	bb1be326-f26e-4684-bbf5-5c3df450dc61	\N	oi-device-hdd	BLE_WiFi
8f8949d8-5aae-48b0-971f-d8a231e9e95e	Smart Switch	Matter-compatible smart switch	{"on_off": true}	f	2025-07-27 21:06:29.021368+00	2025-07-27 21:06:29.021368+00	f	bb1be326-f26e-4684-bbf5-5c3df450dc61	bb1be326-f26e-4684-bbf5-5c3df450dc61	\N	oi-device-hdd	BLE_WiFi
ec533e31-88bd-4366-9203-b5fb62507c2a	Smart Bulb	Matter-compatible smart bulb with color control	{"on_off": true, "color_control": true}	f	2025-07-27 21:06:29.021368+00	2025-07-27 21:06:29.021368+00	f	bb1be326-f26e-4684-bbf5-5c3df450dc61	bb1be326-f26e-4684-bbf5-5c3df450dc61	\N	oi-device-hdd	BLE_WiFi
2d070c66-0d6c-4100-8ac9-db67797a7a8b	NOUS A8M Socket	NOUS A8M 16A Smart Socket with Matter support	{"onOff": true, "maxPower": 3680, "powerMonitoring": true, "energyMonitoring": true}	f	2025-07-27 21:06:29.021368+00	2025-07-27 21:06:29.021368+00	f	bb1be326-f26e-4684-bbf5-5c3df450dc61	bb1be326-f26e-4684-bbf5-5c3df450dc61	\N	oi-device-hdd	BLE_WiFi
01ccb8d9-29fd-4690-b84f-ab6556e38947	Temperature Sensor	Matter-compatible temperature sensor	{"humidity": true, "temperature": true}	f	2025-07-27 21:06:29.021368+00	2025-07-27 21:06:29.021368+00	f	bb1be326-f26e-4684-bbf5-5c3df450dc61	bb1be326-f26e-4684-bbf5-5c3df450dc61	\N	oi-device-hdd	BLE_WiFi
8964f520-764b-40b1-b34a-d08d7d34d49d	Motion Sensor	Matter-compatible motion sensor	{"motion": true, "occupancy": true}	f	2025-07-27 21:06:29.021368+00	2025-07-27 21:06:29.021368+00	f	bb1be326-f26e-4684-bbf5-5c3df450dc61	bb1be326-f26e-4684-bbf5-5c3df450dc61	\N	oi-device-hdd	BLE_WiFi
\.


--
-- Data for Name: Devices; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."Devices" ("Id", "Name", "Description", "MatterDeviceId", "DeviceTypeId", "RoomId", "Properties", "Status", "Configuration", "LastStateChange", "IsOnline", "LastSeen", "CreatedAt", "UpdatedAt", "IsDeleted", "CreatedById", "UpdatedById") FROM stdin;
196c7b82-bf71-4e88-b714-0354c2d06c04	Office Socket 1	NOUS A8M Smart Socket - Office Area	4328ED19954E9DC0	c9235be2-412f-450e-88eb-21eaab660ccf	64f82b49-f0d5-4025-8646-2e1a12f8baa2	{"model": "A8M", "clusters": [3, 4, 6, 29], "device_type": 266, "manufacturer": "NOUS", "matter_version": "1.0", "device_revision": 2, "cluster_revision": 1}	online	{}	2025-08-17 20:59:54.301596+00	t	2025-08-17 20:59:54.301596+00	2025-08-17 20:59:54.301596+00	2025-08-19 18:41:59.35248+00	f	bb1be326-f26e-4684-bbf5-5c3df450dc61	bb1be326-f26e-4684-bbf5-5c3df450dc61
083c779a-e717-4361-8183-4146414c2f48	Office Socket 2	NOUS A8M Smart Socket - Office Area	4328ED19954E9DC1	c9235be2-412f-450e-88eb-21eaab660ccf	64f82b49-f0d5-4025-8646-2e1a12f8baa2	{"model": "A8M", "clusters": [3, 4, 6, 29], "device_type": 266, "manufacturer": "NOUS", "matter_version": "1.0", "device_revision": 2, "cluster_revision": 1}	online	{}	2025-08-17 21:01:09.465949+00	t	2025-08-17 21:01:09.465949+00	2025-08-17 21:01:09.465949+00	2025-08-19 19:01:04.364835+00	f	bb1be326-f26e-4684-bbf5-5c3df450dc61	bb1be326-f26e-4684-bbf5-5c3df450dc61
\.


--
-- Data for Name: EnvironmentalSettings; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."EnvironmentalSettings" ("Id", "UserId", "IndoorTemperatureMin", "IndoorTemperatureMax", "OutdoorTemperatureMin", "OutdoorTemperatureMax", "HumidityMin", "HumidityMax", "CO2Max", "VOCMax", "TemperatureWarning", "HumidityWarning", "LastUpdated", "CreatedAt", "UpdatedAt", "IsDeleted", "CreatedById", "UpdatedById") FROM stdin;
\.


--
-- Data for Name: FirmwareUpdates; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."FirmwareUpdates" ("Id", "Name", "Description", "CurrentVersion", "TargetVersion", "DownloadUrl", "FileName", "FileSize", "Checksum", "Status", "DownloadStartedAt", "DownloadCompletedAt", "InstallationStartedAt", "InstallationCompletedAt", "ErrorMessage", "UpdateMetadata", "IsCompatible", "RequiresConfirmation", "IsConfirmed", "ConfirmedAt", "ConfirmedBy", "CreatedAt", "UpdatedAt", "IsDeleted", "CreatedById", "UpdatedById") FROM stdin;
\.


--
-- Data for Name: GroupMembers; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."GroupMembers" ("GroupId", "DeviceId", "GroupId1", "DeviceId1", "Id", "CreatedAt", "UpdatedAt", "IsDeleted", "CreatedById", "UpdatedById") FROM stdin;
\.


--
-- Data for Name: GroupStateHistory; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."GroupStateHistory" ("Id", "GroupId", "GroupId1", "OldState", "NewState", "Description", "CreatedAt", "UpdatedAt", "IsDeleted", "CreatedById", "UpdatedById") FROM stdin;
\.


--
-- Data for Name: GroupStates; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."GroupStates" ("GroupId", "State", "LastUpdated", "Id", "CreatedAt", "UpdatedAt", "IsDeleted", "CreatedById", "UpdatedById") FROM stdin;
\.


--
-- Data for Name: Groups; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."Groups" ("Id", "Name", "Description", "CreatedAt", "UpdatedAt", "IsDeleted", "CreatedById", "UpdatedById") FROM stdin;
\.


--
-- Data for Name: Notifications; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."Notifications" ("Id", "UserId", "Message", "Type", "Severity", "IsRead", "ReadAt", "CreatedAt", "UpdatedAt", "IsDeleted", "CreatedById", "UpdatedById") FROM stdin;
\.


--
-- Data for Name: Rooms; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."Rooms" ("Id", "Name", "Description", "Floor", "CreatedAt", "UpdatedAt", "IsDeleted", "CreatedById", "UpdatedById") FROM stdin;
40fbaeab-200b-46dc-9098-486b47b1d3e6	Living Room	Main living area	1	2025-07-27 21:05:26.970972+00	2025-07-27 21:05:26.970972+00	f	bb1be326-f26e-4684-bbf5-5c3df450dc61	bb1be326-f26e-4684-bbf5-5c3df450dc61
cbe6c554-1b35-4872-b064-ff7545962a8c	Kitchen	Kitchen area	1	2025-07-27 21:05:26.970972+00	2025-07-27 21:05:26.970972+00	f	bb1be326-f26e-4684-bbf5-5c3df450dc61	bb1be326-f26e-4684-bbf5-5c3df450dc61
c134bccd-0158-4b47-940d-355a5584ffba	Bedroom	Bedroom area	1	2025-07-27 21:05:26.970972+00	2025-07-27 21:05:26.970972+00	f	bb1be326-f26e-4684-bbf5-5c3df450dc61	bb1be326-f26e-4684-bbf5-5c3df450dc61
f524a365-46c8-4599-aba8-c90e2385af93	Bathroom	Bathroom area	1	2025-07-27 21:05:26.970972+00	2025-07-27 21:05:26.970972+00	f	bb1be326-f26e-4684-bbf5-5c3df450dc61	bb1be326-f26e-4684-bbf5-5c3df450dc61
64f82b49-f0d5-4025-8646-2e1a12f8baa2	Office	Office Base Floor	0	2025-08-18 20:13:46.618856+00	2025-08-18 20:13:46.619468+00	f	admin-user-id-1234-5678-9012-345678901234	admin-user-id-1234-5678-9012-345678901234
\.


--
-- Data for Name: RuleActions; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."RuleActions" ("Id", "RuleId", "RuleId1", "Action", "Order", "CreatedAt", "UpdatedAt", "IsDeleted", "CreatedById", "UpdatedById") FROM stdin;
\.


--
-- Data for Name: RuleConditions; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."RuleConditions" ("Id", "RuleId", "RuleId1", "Condition", "Order", "CreatedAt", "UpdatedAt", "IsDeleted", "CreatedById", "UpdatedById") FROM stdin;
\.


--
-- Data for Name: RuleExecutionHistory; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."RuleExecutionHistory" ("Id", "RuleId", "RuleId1", "Success", "Result", "ErrorMessage", "ExecutionTime", "CreatedAt", "UpdatedAt", "IsDeleted", "CreatedById", "UpdatedById") FROM stdin;
\.


--
-- Data for Name: RuleTriggers; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."RuleTriggers" ("Id", "RuleId", "TriggerType", "Trigger", "IsEnabled", "LastTriggered", "RuleId1", "CreatedAt", "UpdatedAt", "IsDeleted", "CreatedById", "UpdatedById") FROM stdin;
\.


--
-- Data for Name: Rules; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."Rules" ("Id", "Name", "Description", "Condition", "Action", "IsActive", "CreatedAt", "UpdatedAt", "IsDeleted", "CreatedById", "UpdatedById") FROM stdin;
\.


--
-- Data for Name: UserDevicePermissions; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."UserDevicePermissions" ("Id", "UserId", "DeviceId", "PermissionLevel", "CreatedAt", "UpdatedAt", "IsDeleted", "CreatedById", "UpdatedById") FROM stdin;
\.


--
-- Data for Name: UserRoomPermissions; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."UserRoomPermissions" ("Id", "UserId", "RoomId", "Permission", "CreatedAt", "UpdatedAt", "IsDeleted", "CreatedById", "UpdatedById") FROM stdin;
\.


--
-- Data for Name: UserSettings; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."UserSettings" ("UserId", "Theme", "Language", "ShowOfflineDevices", "DefaultView", "DashboardLayout", "FavoriteDevices", "QuickActions", "EmailNotifications", "PushNotifications", "NotificationPreferences", "DeviceDisplayPreferences", "LastUsedDevices", "RoomDisplayOrder", "ShowEmptyRooms", "ShowAutomationSuggestions", "AutomationPreferences", "UserId1", "Id", "CreatedAt", "UpdatedAt", "IsDeleted", "CreatedById", "UpdatedById") FROM stdin;
\.


--
-- Data for Name: __EFMigrationsHistory; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."__EFMigrationsHistory" ("MigrationId", "ProductVersion") FROM stdin;
\.


--
-- Name: AspNetRoleClaims_Id_seq; Type: SEQUENCE SET; Schema: db; Owner: postgres
--

SELECT pg_catalog.setval('db."AspNetRoleClaims_Id_seq"', 1, false);


--
-- Name: AspNetUserClaims_Id_seq; Type: SEQUENCE SET; Schema: db; Owner: postgres
--

SELECT pg_catalog.setval('db."AspNetUserClaims_Id_seq"', 1, false);


--
-- Name: AspNetRoleClaims_Id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public."AspNetRoleClaims_Id_seq"', 1, false);


--
-- Name: AspNetUserClaims_Id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public."AspNetUserClaims_Id_seq"', 1, false);


--
-- Name: ApplicationUsers PK_ApplicationUsers; Type: CONSTRAINT; Schema: db; Owner: postgres
--

ALTER TABLE ONLY db."ApplicationUsers"
    ADD CONSTRAINT "PK_ApplicationUsers" PRIMARY KEY ("Id");


--
-- Name: AspNetRoleClaims PK_AspNetRoleClaims; Type: CONSTRAINT; Schema: db; Owner: postgres
--

ALTER TABLE ONLY db."AspNetRoleClaims"
    ADD CONSTRAINT "PK_AspNetRoleClaims" PRIMARY KEY ("Id");


--
-- Name: AspNetRoles PK_AspNetRoles; Type: CONSTRAINT; Schema: db; Owner: postgres
--

ALTER TABLE ONLY db."AspNetRoles"
    ADD CONSTRAINT "PK_AspNetRoles" PRIMARY KEY ("Id");


--
-- Name: AspNetUserClaims PK_AspNetUserClaims; Type: CONSTRAINT; Schema: db; Owner: postgres
--

ALTER TABLE ONLY db."AspNetUserClaims"
    ADD CONSTRAINT "PK_AspNetUserClaims" PRIMARY KEY ("Id");


--
-- Name: AspNetUserLogins PK_AspNetUserLogins; Type: CONSTRAINT; Schema: db; Owner: postgres
--

ALTER TABLE ONLY db."AspNetUserLogins"
    ADD CONSTRAINT "PK_AspNetUserLogins" PRIMARY KEY ("LoginProvider", "ProviderKey");


--
-- Name: AspNetUserRoles PK_AspNetUserRoles; Type: CONSTRAINT; Schema: db; Owner: postgres
--

ALTER TABLE ONLY db."AspNetUserRoles"
    ADD CONSTRAINT "PK_AspNetUserRoles" PRIMARY KEY ("UserId", "RoleId");


--
-- Name: AspNetUserTokens PK_AspNetUserTokens; Type: CONSTRAINT; Schema: db; Owner: postgres
--

ALTER TABLE ONLY db."AspNetUserTokens"
    ADD CONSTRAINT "PK_AspNetUserTokens" PRIMARY KEY ("UserId", "LoginProvider", "Name");


--
-- Name: AspNetUsers PK_AspNetUsers; Type: CONSTRAINT; Schema: db; Owner: postgres
--

ALTER TABLE ONLY db."AspNetUsers"
    ADD CONSTRAINT "PK_AspNetUsers" PRIMARY KEY ("Id");


--
-- Name: Clusters PK_Clusters; Type: CONSTRAINT; Schema: db; Owner: postgres
--

ALTER TABLE ONLY db."Clusters"
    ADD CONSTRAINT "PK_Clusters" PRIMARY KEY ("Id");


--
-- Name: DeviceDeviceGroup PK_DeviceDeviceGroup; Type: CONSTRAINT; Schema: db; Owner: postgres
--

ALTER TABLE ONLY db."DeviceDeviceGroup"
    ADD CONSTRAINT "PK_DeviceDeviceGroup" PRIMARY KEY ("DeviceGroupsId", "DevicesId");


--
-- Name: DeviceEventLogs PK_DeviceEventLogs; Type: CONSTRAINT; Schema: db; Owner: postgres
--

ALTER TABLE ONLY db."DeviceEventLogs"
    ADD CONSTRAINT "PK_DeviceEventLogs" PRIMARY KEY ("Id");


--
-- Name: DeviceEvents PK_DeviceEvents; Type: CONSTRAINT; Schema: db; Owner: postgres
--

ALTER TABLE ONLY db."DeviceEvents"
    ADD CONSTRAINT "PK_DeviceEvents" PRIMARY KEY ("Id");


--
-- Name: DeviceFirmwareUpdates PK_DeviceFirmwareUpdates; Type: CONSTRAINT; Schema: db; Owner: postgres
--

ALTER TABLE ONLY db."DeviceFirmwareUpdates"
    ADD CONSTRAINT "PK_DeviceFirmwareUpdates" PRIMARY KEY ("Id");


--
-- Name: DeviceGroups PK_DeviceGroups; Type: CONSTRAINT; Schema: db; Owner: postgres
--

ALTER TABLE ONLY db."DeviceGroups"
    ADD CONSTRAINT "PK_DeviceGroups" PRIMARY KEY ("Id");


--
-- Name: DeviceHistory PK_DeviceHistory; Type: CONSTRAINT; Schema: db; Owner: postgres
--

ALTER TABLE ONLY db."DeviceHistory"
    ADD CONSTRAINT "PK_DeviceHistory" PRIMARY KEY ("Id");


--
-- Name: DevicePropertyChanges PK_DevicePropertyChanges; Type: CONSTRAINT; Schema: db; Owner: postgres
--

ALTER TABLE ONLY db."DevicePropertyChanges"
    ADD CONSTRAINT "PK_DevicePropertyChanges" PRIMARY KEY ("Id");


--
-- Name: DeviceStates PK_DeviceStates; Type: CONSTRAINT; Schema: db; Owner: postgres
--

ALTER TABLE ONLY db."DeviceStates"
    ADD CONSTRAINT "PK_DeviceStates" PRIMARY KEY ("Id");


--
-- Name: DeviceTypes PK_DeviceTypes; Type: CONSTRAINT; Schema: db; Owner: postgres
--

ALTER TABLE ONLY db."DeviceTypes"
    ADD CONSTRAINT "PK_DeviceTypes" PRIMARY KEY ("Id");


--
-- Name: Devices PK_Devices; Type: CONSTRAINT; Schema: db; Owner: postgres
--

ALTER TABLE ONLY db."Devices"
    ADD CONSTRAINT "PK_Devices" PRIMARY KEY ("Id");


--
-- Name: EnvironmentalSettings PK_EnvironmentalSettings; Type: CONSTRAINT; Schema: db; Owner: postgres
--

ALTER TABLE ONLY db."EnvironmentalSettings"
    ADD CONSTRAINT "PK_EnvironmentalSettings" PRIMARY KEY ("Id");


--
-- Name: FirmwareUpdates PK_FirmwareUpdates; Type: CONSTRAINT; Schema: db; Owner: postgres
--

ALTER TABLE ONLY db."FirmwareUpdates"
    ADD CONSTRAINT "PK_FirmwareUpdates" PRIMARY KEY ("Id");


--
-- Name: GroupMembers PK_GroupMembers; Type: CONSTRAINT; Schema: db; Owner: postgres
--

ALTER TABLE ONLY db."GroupMembers"
    ADD CONSTRAINT "PK_GroupMembers" PRIMARY KEY ("GroupId", "DeviceId");


--
-- Name: GroupStateHistory PK_GroupStateHistory; Type: CONSTRAINT; Schema: db; Owner: postgres
--

ALTER TABLE ONLY db."GroupStateHistory"
    ADD CONSTRAINT "PK_GroupStateHistory" PRIMARY KEY ("Id");


--
-- Name: GroupStates PK_GroupStates; Type: CONSTRAINT; Schema: db; Owner: postgres
--

ALTER TABLE ONLY db."GroupStates"
    ADD CONSTRAINT "PK_GroupStates" PRIMARY KEY ("GroupId");


--
-- Name: Groups PK_Groups; Type: CONSTRAINT; Schema: db; Owner: postgres
--

ALTER TABLE ONLY db."Groups"
    ADD CONSTRAINT "PK_Groups" PRIMARY KEY ("Id");


--
-- Name: Notifications PK_Notifications; Type: CONSTRAINT; Schema: db; Owner: postgres
--

ALTER TABLE ONLY db."Notifications"
    ADD CONSTRAINT "PK_Notifications" PRIMARY KEY ("Id");


--
-- Name: Rooms PK_Rooms; Type: CONSTRAINT; Schema: db; Owner: postgres
--

ALTER TABLE ONLY db."Rooms"
    ADD CONSTRAINT "PK_Rooms" PRIMARY KEY ("Id");


--
-- Name: RuleActions PK_RuleActions; Type: CONSTRAINT; Schema: db; Owner: postgres
--

ALTER TABLE ONLY db."RuleActions"
    ADD CONSTRAINT "PK_RuleActions" PRIMARY KEY ("Id");


--
-- Name: RuleConditions PK_RuleConditions; Type: CONSTRAINT; Schema: db; Owner: postgres
--

ALTER TABLE ONLY db."RuleConditions"
    ADD CONSTRAINT "PK_RuleConditions" PRIMARY KEY ("Id");


--
-- Name: RuleExecutionHistory PK_RuleExecutionHistory; Type: CONSTRAINT; Schema: db; Owner: postgres
--

ALTER TABLE ONLY db."RuleExecutionHistory"
    ADD CONSTRAINT "PK_RuleExecutionHistory" PRIMARY KEY ("Id");


--
-- Name: RuleTriggers PK_RuleTriggers; Type: CONSTRAINT; Schema: db; Owner: postgres
--

ALTER TABLE ONLY db."RuleTriggers"
    ADD CONSTRAINT "PK_RuleTriggers" PRIMARY KEY ("Id");


--
-- Name: Rules PK_Rules; Type: CONSTRAINT; Schema: db; Owner: postgres
--

ALTER TABLE ONLY db."Rules"
    ADD CONSTRAINT "PK_Rules" PRIMARY KEY ("Id");


--
-- Name: UserDevicePermissions PK_UserDevicePermissions; Type: CONSTRAINT; Schema: db; Owner: postgres
--

ALTER TABLE ONLY db."UserDevicePermissions"
    ADD CONSTRAINT "PK_UserDevicePermissions" PRIMARY KEY ("Id");


--
-- Name: UserRoomPermissions PK_UserRoomPermissions; Type: CONSTRAINT; Schema: db; Owner: postgres
--

ALTER TABLE ONLY db."UserRoomPermissions"
    ADD CONSTRAINT "PK_UserRoomPermissions" PRIMARY KEY ("Id");


--
-- Name: UserSettings PK_UserSettings; Type: CONSTRAINT; Schema: db; Owner: postgres
--

ALTER TABLE ONLY db."UserSettings"
    ADD CONSTRAINT "PK_UserSettings" PRIMARY KEY ("UserId");


--
-- Name: __EFMigrationsHistory PK___EFMigrationsHistory; Type: CONSTRAINT; Schema: db; Owner: postgres
--

ALTER TABLE ONLY db."__EFMigrationsHistory"
    ADD CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY ("MigrationId");


--
-- Name: ApplicationUsers PK_ApplicationUsers; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."ApplicationUsers"
    ADD CONSTRAINT "PK_ApplicationUsers" PRIMARY KEY ("Id");


--
-- Name: AspNetRoleClaims PK_AspNetRoleClaims; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."AspNetRoleClaims"
    ADD CONSTRAINT "PK_AspNetRoleClaims" PRIMARY KEY ("Id");


--
-- Name: AspNetRoles PK_AspNetRoles; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."AspNetRoles"
    ADD CONSTRAINT "PK_AspNetRoles" PRIMARY KEY ("Id");


--
-- Name: AspNetUserClaims PK_AspNetUserClaims; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."AspNetUserClaims"
    ADD CONSTRAINT "PK_AspNetUserClaims" PRIMARY KEY ("Id");


--
-- Name: AspNetUserLogins PK_AspNetUserLogins; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."AspNetUserLogins"
    ADD CONSTRAINT "PK_AspNetUserLogins" PRIMARY KEY ("LoginProvider", "ProviderKey");


--
-- Name: AspNetUserRoles PK_AspNetUserRoles; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."AspNetUserRoles"
    ADD CONSTRAINT "PK_AspNetUserRoles" PRIMARY KEY ("UserId", "RoleId");


--
-- Name: AspNetUserTokens PK_AspNetUserTokens; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."AspNetUserTokens"
    ADD CONSTRAINT "PK_AspNetUserTokens" PRIMARY KEY ("UserId", "LoginProvider", "Name");


--
-- Name: AspNetUsers PK_AspNetUsers; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."AspNetUsers"
    ADD CONSTRAINT "PK_AspNetUsers" PRIMARY KEY ("Id");


--
-- Name: Clusters PK_Clusters; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."Clusters"
    ADD CONSTRAINT "PK_Clusters" PRIMARY KEY ("Id");


--
-- Name: DeviceDeviceGroup PK_DeviceDeviceGroup; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."DeviceDeviceGroup"
    ADD CONSTRAINT "PK_DeviceDeviceGroup" PRIMARY KEY ("DeviceGroupsId", "DevicesId");


--
-- Name: DeviceEvents PK_DeviceEvents; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."DeviceEvents"
    ADD CONSTRAINT "PK_DeviceEvents" PRIMARY KEY ("Id");


--
-- Name: DeviceFirmwareUpdates PK_DeviceFirmwareUpdates; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."DeviceFirmwareUpdates"
    ADD CONSTRAINT "PK_DeviceFirmwareUpdates" PRIMARY KEY ("Id");


--
-- Name: DeviceGroupMembers PK_DeviceGroupMembers; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."DeviceGroupMembers"
    ADD CONSTRAINT "PK_DeviceGroupMembers" PRIMARY KEY ("DeviceId", "DeviceGroupId");


--
-- Name: DeviceGroups PK_DeviceGroups; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."DeviceGroups"
    ADD CONSTRAINT "PK_DeviceGroups" PRIMARY KEY ("Id");


--
-- Name: DeviceHistory PK_DeviceHistory; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."DeviceHistory"
    ADD CONSTRAINT "PK_DeviceHistory" PRIMARY KEY ("Id");


--
-- Name: DevicePropertyChanges PK_DevicePropertyChanges; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."DevicePropertyChanges"
    ADD CONSTRAINT "PK_DevicePropertyChanges" PRIMARY KEY ("Id");


--
-- Name: DeviceStates PK_DeviceStates; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."DeviceStates"
    ADD CONSTRAINT "PK_DeviceStates" PRIMARY KEY ("Id");


--
-- Name: DeviceTypes PK_DeviceTypes; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."DeviceTypes"
    ADD CONSTRAINT "PK_DeviceTypes" PRIMARY KEY ("Id");


--
-- Name: Devices PK_Devices; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."Devices"
    ADD CONSTRAINT "PK_Devices" PRIMARY KEY ("Id");


--
-- Name: EnvironmentalSettings PK_EnvironmentalSettings; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."EnvironmentalSettings"
    ADD CONSTRAINT "PK_EnvironmentalSettings" PRIMARY KEY ("Id");


--
-- Name: FirmwareUpdates PK_FirmwareUpdates; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."FirmwareUpdates"
    ADD CONSTRAINT "PK_FirmwareUpdates" PRIMARY KEY ("Id");


--
-- Name: GroupMembers PK_GroupMembers; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."GroupMembers"
    ADD CONSTRAINT "PK_GroupMembers" PRIMARY KEY ("GroupId", "DeviceId");


--
-- Name: GroupStateHistory PK_GroupStateHistory; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."GroupStateHistory"
    ADD CONSTRAINT "PK_GroupStateHistory" PRIMARY KEY ("Id");


--
-- Name: GroupStates PK_GroupStates; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."GroupStates"
    ADD CONSTRAINT "PK_GroupStates" PRIMARY KEY ("GroupId");


--
-- Name: Groups PK_Groups; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."Groups"
    ADD CONSTRAINT "PK_Groups" PRIMARY KEY ("Id");


--
-- Name: Notifications PK_Notifications; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."Notifications"
    ADD CONSTRAINT "PK_Notifications" PRIMARY KEY ("Id");


--
-- Name: Rooms PK_Rooms; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."Rooms"
    ADD CONSTRAINT "PK_Rooms" PRIMARY KEY ("Id");


--
-- Name: RuleActions PK_RuleActions; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."RuleActions"
    ADD CONSTRAINT "PK_RuleActions" PRIMARY KEY ("Id");


--
-- Name: RuleConditions PK_RuleConditions; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."RuleConditions"
    ADD CONSTRAINT "PK_RuleConditions" PRIMARY KEY ("Id");


--
-- Name: RuleExecutionHistory PK_RuleExecutionHistory; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."RuleExecutionHistory"
    ADD CONSTRAINT "PK_RuleExecutionHistory" PRIMARY KEY ("Id");


--
-- Name: RuleTriggers PK_RuleTriggers; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."RuleTriggers"
    ADD CONSTRAINT "PK_RuleTriggers" PRIMARY KEY ("Id");


--
-- Name: Rules PK_Rules; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."Rules"
    ADD CONSTRAINT "PK_Rules" PRIMARY KEY ("Id");


--
-- Name: UserDevicePermissions PK_UserDevicePermissions; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."UserDevicePermissions"
    ADD CONSTRAINT "PK_UserDevicePermissions" PRIMARY KEY ("Id");


--
-- Name: UserRoomPermissions PK_UserRoomPermissions; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."UserRoomPermissions"
    ADD CONSTRAINT "PK_UserRoomPermissions" PRIMARY KEY ("Id");


--
-- Name: UserSettings PK_UserSettings; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."UserSettings"
    ADD CONSTRAINT "PK_UserSettings" PRIMARY KEY ("UserId");


--
-- Name: __EFMigrationsHistory PK___EFMigrationsHistory; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."__EFMigrationsHistory"
    ADD CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY ("MigrationId");


--
-- Name: EmailIndex; Type: INDEX; Schema: db; Owner: postgres
--

CREATE INDEX "EmailIndex" ON db."AspNetUsers" USING btree ("NormalizedEmail");


--
-- Name: IX_ApplicationUsers_Email; Type: INDEX; Schema: db; Owner: postgres
--

CREATE UNIQUE INDEX "IX_ApplicationUsers_Email" ON db."ApplicationUsers" USING btree ("Email");


--
-- Name: IX_ApplicationUsers_UserName; Type: INDEX; Schema: db; Owner: postgres
--

CREATE UNIQUE INDEX "IX_ApplicationUsers_UserName" ON db."ApplicationUsers" USING btree ("UserName");


--
-- Name: IX_AspNetRoleClaims_RoleId; Type: INDEX; Schema: db; Owner: postgres
--

CREATE INDEX "IX_AspNetRoleClaims_RoleId" ON db."AspNetRoleClaims" USING btree ("RoleId");


--
-- Name: IX_AspNetUserClaims_UserId; Type: INDEX; Schema: db; Owner: postgres
--

CREATE INDEX "IX_AspNetUserClaims_UserId" ON db."AspNetUserClaims" USING btree ("UserId");


--
-- Name: IX_AspNetUserLogins_UserId; Type: INDEX; Schema: db; Owner: postgres
--

CREATE INDEX "IX_AspNetUserLogins_UserId" ON db."AspNetUserLogins" USING btree ("UserId");


--
-- Name: IX_AspNetUserRoles_RoleId; Type: INDEX; Schema: db; Owner: postgres
--

CREATE INDEX "IX_AspNetUserRoles_RoleId" ON db."AspNetUserRoles" USING btree ("RoleId");


--
-- Name: IX_Clusters_ClusterId; Type: INDEX; Schema: db; Owner: postgres
--

CREATE UNIQUE INDEX "IX_Clusters_ClusterId" ON db."Clusters" USING btree ("ClusterId");


--
-- Name: IX_DeviceDeviceGroup_DevicesId; Type: INDEX; Schema: db; Owner: postgres
--

CREATE INDEX "IX_DeviceDeviceGroup_DevicesId" ON db."DeviceDeviceGroup" USING btree ("DevicesId");


--
-- Name: IX_DeviceEventLogs_DeviceId; Type: INDEX; Schema: db; Owner: postgres
--

CREATE INDEX "IX_DeviceEventLogs_DeviceId" ON db."DeviceEventLogs" USING btree ("DeviceId");


--
-- Name: IX_DeviceEventLogs_EventType; Type: INDEX; Schema: db; Owner: postgres
--

CREATE INDEX "IX_DeviceEventLogs_EventType" ON db."DeviceEventLogs" USING btree ("EventType");


--
-- Name: IX_DeviceEventLogs_Timestamp; Type: INDEX; Schema: db; Owner: postgres
--

CREATE INDEX "IX_DeviceEventLogs_Timestamp" ON db."DeviceEventLogs" USING btree ("Timestamp");


--
-- Name: IX_DeviceEvents_DeviceId; Type: INDEX; Schema: db; Owner: postgres
--

CREATE INDEX "IX_DeviceEvents_DeviceId" ON db."DeviceEvents" USING btree ("DeviceId");


--
-- Name: IX_DeviceFirmwareUpdates_DeviceId; Type: INDEX; Schema: db; Owner: postgres
--

CREATE INDEX "IX_DeviceFirmwareUpdates_DeviceId" ON db."DeviceFirmwareUpdates" USING btree ("DeviceId");


--
-- Name: IX_DeviceFirmwareUpdates_FirmwareUpdateId; Type: INDEX; Schema: db; Owner: postgres
--

CREATE INDEX "IX_DeviceFirmwareUpdates_FirmwareUpdateId" ON db."DeviceFirmwareUpdates" USING btree ("FirmwareUpdateId");


--
-- Name: IX_DeviceGroups_RoomId; Type: INDEX; Schema: db; Owner: postgres
--

CREATE INDEX "IX_DeviceGroups_RoomId" ON db."DeviceGroups" USING btree ("RoomId");


--
-- Name: IX_DeviceHistory_DeviceId; Type: INDEX; Schema: db; Owner: postgres
--

CREATE INDEX "IX_DeviceHistory_DeviceId" ON db."DeviceHistory" USING btree ("DeviceId");


--
-- Name: IX_DevicePropertyChanges_DeviceId; Type: INDEX; Schema: db; Owner: postgres
--

CREATE INDEX "IX_DevicePropertyChanges_DeviceId" ON db."DevicePropertyChanges" USING btree ("DeviceId");


--
-- Name: IX_DeviceStates_DeviceId; Type: INDEX; Schema: db; Owner: postgres
--

CREATE INDEX "IX_DeviceStates_DeviceId" ON db."DeviceStates" USING btree ("DeviceId");


--
-- Name: IX_DeviceTypes_DeviceGroupId; Type: INDEX; Schema: db; Owner: postgres
--

CREATE INDEX "IX_DeviceTypes_DeviceGroupId" ON db."DeviceTypes" USING btree ("DeviceGroupId");


--
-- Name: IX_Devices_DeviceTypeId; Type: INDEX; Schema: db; Owner: postgres
--

CREATE INDEX "IX_Devices_DeviceTypeId" ON db."Devices" USING btree ("DeviceTypeId");


--
-- Name: IX_Devices_MatterDeviceId; Type: INDEX; Schema: db; Owner: postgres
--

CREATE UNIQUE INDEX "IX_Devices_MatterDeviceId" ON db."Devices" USING btree ("MatterDeviceId") WHERE ("MatterDeviceId" IS NOT NULL);


--
-- Name: IX_Devices_RoomId; Type: INDEX; Schema: db; Owner: postgres
--

CREATE INDEX "IX_Devices_RoomId" ON db."Devices" USING btree ("RoomId");


--
-- Name: IX_EnvironmentalSettings_UserId; Type: INDEX; Schema: db; Owner: postgres
--

CREATE UNIQUE INDEX "IX_EnvironmentalSettings_UserId" ON db."EnvironmentalSettings" USING btree ("UserId");


--
-- Name: IX_GroupMembers_DeviceId; Type: INDEX; Schema: db; Owner: postgres
--

CREATE INDEX "IX_GroupMembers_DeviceId" ON db."GroupMembers" USING btree ("DeviceId");


--
-- Name: IX_GroupStateHistory_GroupId; Type: INDEX; Schema: db; Owner: postgres
--

CREATE INDEX "IX_GroupStateHistory_GroupId" ON db."GroupStateHistory" USING btree ("GroupId");


--
-- Name: IX_RuleActions_RuleId; Type: INDEX; Schema: db; Owner: postgres
--

CREATE INDEX "IX_RuleActions_RuleId" ON db."RuleActions" USING btree ("RuleId");


--
-- Name: IX_RuleConditions_RuleId; Type: INDEX; Schema: db; Owner: postgres
--

CREATE INDEX "IX_RuleConditions_RuleId" ON db."RuleConditions" USING btree ("RuleId");


--
-- Name: IX_RuleExecutionHistory_RuleId; Type: INDEX; Schema: db; Owner: postgres
--

CREATE INDEX "IX_RuleExecutionHistory_RuleId" ON db."RuleExecutionHistory" USING btree ("RuleId");


--
-- Name: IX_RuleTriggers_RuleId; Type: INDEX; Schema: db; Owner: postgres
--

CREATE INDEX "IX_RuleTriggers_RuleId" ON db."RuleTriggers" USING btree ("RuleId");


--
-- Name: IX_UserDevicePermissions_DeviceId; Type: INDEX; Schema: db; Owner: postgres
--

CREATE INDEX "IX_UserDevicePermissions_DeviceId" ON db."UserDevicePermissions" USING btree ("DeviceId");


--
-- Name: IX_UserDevicePermissions_UserId; Type: INDEX; Schema: db; Owner: postgres
--

CREATE INDEX "IX_UserDevicePermissions_UserId" ON db."UserDevicePermissions" USING btree ("UserId");


--
-- Name: IX_UserRoomPermissions_RoomId; Type: INDEX; Schema: db; Owner: postgres
--

CREATE INDEX "IX_UserRoomPermissions_RoomId" ON db."UserRoomPermissions" USING btree ("RoomId");


--
-- Name: IX_UserRoomPermissions_UserId; Type: INDEX; Schema: db; Owner: postgres
--

CREATE INDEX "IX_UserRoomPermissions_UserId" ON db."UserRoomPermissions" USING btree ("UserId");


--
-- Name: RoleNameIndex; Type: INDEX; Schema: db; Owner: postgres
--

CREATE UNIQUE INDEX "RoleNameIndex" ON db."AspNetRoles" USING btree ("NormalizedName");


--
-- Name: UserNameIndex; Type: INDEX; Schema: db; Owner: postgres
--

CREATE UNIQUE INDEX "UserNameIndex" ON db."AspNetUsers" USING btree ("NormalizedUserName");


--
-- Name: EmailIndex; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "EmailIndex" ON public."AspNetUsers" USING btree ("NormalizedEmail");


--
-- Name: IX_ApplicationUsers_CreatedById; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_ApplicationUsers_CreatedById" ON public."ApplicationUsers" USING btree ("CreatedById");


--
-- Name: IX_ApplicationUsers_Email; Type: INDEX; Schema: public; Owner: postgres
--

CREATE UNIQUE INDEX "IX_ApplicationUsers_Email" ON public."ApplicationUsers" USING btree ("Email");


--
-- Name: IX_ApplicationUsers_UpdatedById; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_ApplicationUsers_UpdatedById" ON public."ApplicationUsers" USING btree ("UpdatedById");


--
-- Name: IX_ApplicationUsers_UserName; Type: INDEX; Schema: public; Owner: postgres
--

CREATE UNIQUE INDEX "IX_ApplicationUsers_UserName" ON public."ApplicationUsers" USING btree ("UserName");


--
-- Name: IX_AspNetRoleClaims_RoleId; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_AspNetRoleClaims_RoleId" ON public."AspNetRoleClaims" USING btree ("RoleId");


--
-- Name: IX_AspNetUserClaims_UserId; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_AspNetUserClaims_UserId" ON public."AspNetUserClaims" USING btree ("UserId");


--
-- Name: IX_AspNetUserLogins_UserId; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_AspNetUserLogins_UserId" ON public."AspNetUserLogins" USING btree ("UserId");


--
-- Name: IX_AspNetUserRoles_RoleId; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_AspNetUserRoles_RoleId" ON public."AspNetUserRoles" USING btree ("RoleId");


--
-- Name: IX_Clusters_ClusterId; Type: INDEX; Schema: public; Owner: postgres
--

CREATE UNIQUE INDEX "IX_Clusters_ClusterId" ON public."Clusters" USING btree ("ClusterId");


--
-- Name: IX_Clusters_CreatedById; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_Clusters_CreatedById" ON public."Clusters" USING btree ("CreatedById");


--
-- Name: IX_Clusters_UpdatedById; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_Clusters_UpdatedById" ON public."Clusters" USING btree ("UpdatedById");


--
-- Name: IX_DeviceDeviceGroup_DevicesId; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_DeviceDeviceGroup_DevicesId" ON public."DeviceDeviceGroup" USING btree ("DevicesId");


--
-- Name: IX_DeviceEvents_CreatedById; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_DeviceEvents_CreatedById" ON public."DeviceEvents" USING btree ("CreatedById");


--
-- Name: IX_DeviceEvents_DeviceId; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_DeviceEvents_DeviceId" ON public."DeviceEvents" USING btree ("DeviceId");


--
-- Name: IX_DeviceEvents_UpdatedById; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_DeviceEvents_UpdatedById" ON public."DeviceEvents" USING btree ("UpdatedById");


--
-- Name: IX_DeviceFirmwareUpdates_CreatedById; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_DeviceFirmwareUpdates_CreatedById" ON public."DeviceFirmwareUpdates" USING btree ("CreatedById");


--
-- Name: IX_DeviceFirmwareUpdates_DeviceId; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_DeviceFirmwareUpdates_DeviceId" ON public."DeviceFirmwareUpdates" USING btree ("DeviceId");


--
-- Name: IX_DeviceFirmwareUpdates_FirmwareUpdateId; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_DeviceFirmwareUpdates_FirmwareUpdateId" ON public."DeviceFirmwareUpdates" USING btree ("FirmwareUpdateId");


--
-- Name: IX_DeviceFirmwareUpdates_UpdatedById; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_DeviceFirmwareUpdates_UpdatedById" ON public."DeviceFirmwareUpdates" USING btree ("UpdatedById");


--
-- Name: IX_DeviceGroupMembers_CreatedById; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_DeviceGroupMembers_CreatedById" ON public."DeviceGroupMembers" USING btree ("CreatedById");


--
-- Name: IX_DeviceGroupMembers_DeviceGroupId; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_DeviceGroupMembers_DeviceGroupId" ON public."DeviceGroupMembers" USING btree ("DeviceGroupId");


--
-- Name: IX_DeviceGroupMembers_UpdatedById; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_DeviceGroupMembers_UpdatedById" ON public."DeviceGroupMembers" USING btree ("UpdatedById");


--
-- Name: IX_DeviceGroups_CreatedById; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_DeviceGroups_CreatedById" ON public."DeviceGroups" USING btree ("CreatedById");


--
-- Name: IX_DeviceGroups_RoomId; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_DeviceGroups_RoomId" ON public."DeviceGroups" USING btree ("RoomId");


--
-- Name: IX_DeviceGroups_UpdatedById; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_DeviceGroups_UpdatedById" ON public."DeviceGroups" USING btree ("UpdatedById");


--
-- Name: IX_DeviceHistory_CreatedById; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_DeviceHistory_CreatedById" ON public."DeviceHistory" USING btree ("CreatedById");


--
-- Name: IX_DeviceHistory_DeviceId; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_DeviceHistory_DeviceId" ON public."DeviceHistory" USING btree ("DeviceId");


--
-- Name: IX_DeviceHistory_UpdatedById; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_DeviceHistory_UpdatedById" ON public."DeviceHistory" USING btree ("UpdatedById");


--
-- Name: IX_DevicePropertyChanges_CreatedById; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_DevicePropertyChanges_CreatedById" ON public."DevicePropertyChanges" USING btree ("CreatedById");


--
-- Name: IX_DevicePropertyChanges_DeviceId; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_DevicePropertyChanges_DeviceId" ON public."DevicePropertyChanges" USING btree ("DeviceId");


--
-- Name: IX_DevicePropertyChanges_UpdatedById; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_DevicePropertyChanges_UpdatedById" ON public."DevicePropertyChanges" USING btree ("UpdatedById");


--
-- Name: IX_DeviceStates_CreatedById; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_DeviceStates_CreatedById" ON public."DeviceStates" USING btree ("CreatedById");


--
-- Name: IX_DeviceStates_DeviceId; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_DeviceStates_DeviceId" ON public."DeviceStates" USING btree ("DeviceId");


--
-- Name: IX_DeviceStates_UpdatedById; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_DeviceStates_UpdatedById" ON public."DeviceStates" USING btree ("UpdatedById");


--
-- Name: IX_DeviceTypes_CreatedById; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_DeviceTypes_CreatedById" ON public."DeviceTypes" USING btree ("CreatedById");


--
-- Name: IX_DeviceTypes_UpdatedById; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_DeviceTypes_UpdatedById" ON public."DeviceTypes" USING btree ("UpdatedById");


--
-- Name: IX_Devices_CreatedById; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_Devices_CreatedById" ON public."Devices" USING btree ("CreatedById");


--
-- Name: IX_Devices_DeviceTypeId; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_Devices_DeviceTypeId" ON public."Devices" USING btree ("DeviceTypeId");


--
-- Name: IX_Devices_MatterDeviceId; Type: INDEX; Schema: public; Owner: postgres
--

CREATE UNIQUE INDEX "IX_Devices_MatterDeviceId" ON public."Devices" USING btree ("MatterDeviceId") WHERE ("MatterDeviceId" IS NOT NULL);


--
-- Name: IX_Devices_RoomId; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_Devices_RoomId" ON public."Devices" USING btree ("RoomId");


--
-- Name: IX_Devices_UpdatedById; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_Devices_UpdatedById" ON public."Devices" USING btree ("UpdatedById");


--
-- Name: IX_EnvironmentalSettings_CreatedById; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_EnvironmentalSettings_CreatedById" ON public."EnvironmentalSettings" USING btree ("CreatedById");


--
-- Name: IX_EnvironmentalSettings_UpdatedById; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_EnvironmentalSettings_UpdatedById" ON public."EnvironmentalSettings" USING btree ("UpdatedById");


--
-- Name: IX_EnvironmentalSettings_UserId; Type: INDEX; Schema: public; Owner: postgres
--

CREATE UNIQUE INDEX "IX_EnvironmentalSettings_UserId" ON public."EnvironmentalSettings" USING btree ("UserId");


--
-- Name: IX_FirmwareUpdates_CreatedById; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_FirmwareUpdates_CreatedById" ON public."FirmwareUpdates" USING btree ("CreatedById");


--
-- Name: IX_FirmwareUpdates_UpdatedById; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_FirmwareUpdates_UpdatedById" ON public."FirmwareUpdates" USING btree ("UpdatedById");


--
-- Name: IX_GroupMembers_CreatedById; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_GroupMembers_CreatedById" ON public."GroupMembers" USING btree ("CreatedById");


--
-- Name: IX_GroupMembers_DeviceId; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_GroupMembers_DeviceId" ON public."GroupMembers" USING btree ("DeviceId");


--
-- Name: IX_GroupMembers_DeviceId1; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_GroupMembers_DeviceId1" ON public."GroupMembers" USING btree ("DeviceId1");


--
-- Name: IX_GroupMembers_GroupId1; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_GroupMembers_GroupId1" ON public."GroupMembers" USING btree ("GroupId1");


--
-- Name: IX_GroupMembers_UpdatedById; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_GroupMembers_UpdatedById" ON public."GroupMembers" USING btree ("UpdatedById");


--
-- Name: IX_GroupStateHistory_CreatedById; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_GroupStateHistory_CreatedById" ON public."GroupStateHistory" USING btree ("CreatedById");


--
-- Name: IX_GroupStateHistory_GroupId; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_GroupStateHistory_GroupId" ON public."GroupStateHistory" USING btree ("GroupId");


--
-- Name: IX_GroupStateHistory_GroupId1; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_GroupStateHistory_GroupId1" ON public."GroupStateHistory" USING btree ("GroupId1");


--
-- Name: IX_GroupStateHistory_UpdatedById; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_GroupStateHistory_UpdatedById" ON public."GroupStateHistory" USING btree ("UpdatedById");


--
-- Name: IX_GroupStates_CreatedById; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_GroupStates_CreatedById" ON public."GroupStates" USING btree ("CreatedById");


--
-- Name: IX_GroupStates_UpdatedById; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_GroupStates_UpdatedById" ON public."GroupStates" USING btree ("UpdatedById");


--
-- Name: IX_Groups_CreatedById; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_Groups_CreatedById" ON public."Groups" USING btree ("CreatedById");


--
-- Name: IX_Groups_UpdatedById; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_Groups_UpdatedById" ON public."Groups" USING btree ("UpdatedById");


--
-- Name: IX_Notifications_CreatedById; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_Notifications_CreatedById" ON public."Notifications" USING btree ("CreatedById");


--
-- Name: IX_Notifications_UpdatedById; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_Notifications_UpdatedById" ON public."Notifications" USING btree ("UpdatedById");


--
-- Name: IX_Rooms_CreatedById; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_Rooms_CreatedById" ON public."Rooms" USING btree ("CreatedById");


--
-- Name: IX_Rooms_UpdatedById; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_Rooms_UpdatedById" ON public."Rooms" USING btree ("UpdatedById");


--
-- Name: IX_RuleActions_CreatedById; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_RuleActions_CreatedById" ON public."RuleActions" USING btree ("CreatedById");


--
-- Name: IX_RuleActions_RuleId; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_RuleActions_RuleId" ON public."RuleActions" USING btree ("RuleId");


--
-- Name: IX_RuleActions_RuleId1; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_RuleActions_RuleId1" ON public."RuleActions" USING btree ("RuleId1");


--
-- Name: IX_RuleActions_UpdatedById; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_RuleActions_UpdatedById" ON public."RuleActions" USING btree ("UpdatedById");


--
-- Name: IX_RuleConditions_CreatedById; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_RuleConditions_CreatedById" ON public."RuleConditions" USING btree ("CreatedById");


--
-- Name: IX_RuleConditions_RuleId; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_RuleConditions_RuleId" ON public."RuleConditions" USING btree ("RuleId");


--
-- Name: IX_RuleConditions_RuleId1; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_RuleConditions_RuleId1" ON public."RuleConditions" USING btree ("RuleId1");


--
-- Name: IX_RuleConditions_UpdatedById; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_RuleConditions_UpdatedById" ON public."RuleConditions" USING btree ("UpdatedById");


--
-- Name: IX_RuleExecutionHistory_CreatedById; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_RuleExecutionHistory_CreatedById" ON public."RuleExecutionHistory" USING btree ("CreatedById");


--
-- Name: IX_RuleExecutionHistory_RuleId; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_RuleExecutionHistory_RuleId" ON public."RuleExecutionHistory" USING btree ("RuleId");


--
-- Name: IX_RuleExecutionHistory_RuleId1; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_RuleExecutionHistory_RuleId1" ON public."RuleExecutionHistory" USING btree ("RuleId1");


--
-- Name: IX_RuleExecutionHistory_UpdatedById; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_RuleExecutionHistory_UpdatedById" ON public."RuleExecutionHistory" USING btree ("UpdatedById");


--
-- Name: IX_RuleTriggers_CreatedById; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_RuleTriggers_CreatedById" ON public."RuleTriggers" USING btree ("CreatedById");


--
-- Name: IX_RuleTriggers_RuleId; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_RuleTriggers_RuleId" ON public."RuleTriggers" USING btree ("RuleId");


--
-- Name: IX_RuleTriggers_RuleId1; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_RuleTriggers_RuleId1" ON public."RuleTriggers" USING btree ("RuleId1");


--
-- Name: IX_RuleTriggers_UpdatedById; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_RuleTriggers_UpdatedById" ON public."RuleTriggers" USING btree ("UpdatedById");


--
-- Name: IX_Rules_CreatedById; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_Rules_CreatedById" ON public."Rules" USING btree ("CreatedById");


--
-- Name: IX_Rules_UpdatedById; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_Rules_UpdatedById" ON public."Rules" USING btree ("UpdatedById");


--
-- Name: IX_UserDevicePermissions_CreatedById; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_UserDevicePermissions_CreatedById" ON public."UserDevicePermissions" USING btree ("CreatedById");


--
-- Name: IX_UserDevicePermissions_DeviceId; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_UserDevicePermissions_DeviceId" ON public."UserDevicePermissions" USING btree ("DeviceId");


--
-- Name: IX_UserDevicePermissions_UpdatedById; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_UserDevicePermissions_UpdatedById" ON public."UserDevicePermissions" USING btree ("UpdatedById");


--
-- Name: IX_UserDevicePermissions_UserId; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_UserDevicePermissions_UserId" ON public."UserDevicePermissions" USING btree ("UserId");


--
-- Name: IX_UserRoomPermissions_CreatedById; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_UserRoomPermissions_CreatedById" ON public."UserRoomPermissions" USING btree ("CreatedById");


--
-- Name: IX_UserRoomPermissions_RoomId; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_UserRoomPermissions_RoomId" ON public."UserRoomPermissions" USING btree ("RoomId");


--
-- Name: IX_UserRoomPermissions_UpdatedById; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_UserRoomPermissions_UpdatedById" ON public."UserRoomPermissions" USING btree ("UpdatedById");


--
-- Name: IX_UserRoomPermissions_UserId; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_UserRoomPermissions_UserId" ON public."UserRoomPermissions" USING btree ("UserId");


--
-- Name: IX_UserSettings_CreatedById; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_UserSettings_CreatedById" ON public."UserSettings" USING btree ("CreatedById");


--
-- Name: IX_UserSettings_UpdatedById; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_UserSettings_UpdatedById" ON public."UserSettings" USING btree ("UpdatedById");


--
-- Name: IX_UserSettings_UserId1; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX "IX_UserSettings_UserId1" ON public."UserSettings" USING btree ("UserId1");


--
-- Name: RoleNameIndex; Type: INDEX; Schema: public; Owner: postgres
--

CREATE UNIQUE INDEX "RoleNameIndex" ON public."AspNetRoles" USING btree ("NormalizedName");


--
-- Name: UserNameIndex; Type: INDEX; Schema: public; Owner: postgres
--

CREATE UNIQUE INDEX "UserNameIndex" ON public."AspNetUsers" USING btree ("NormalizedUserName");


--
-- Name: AspNetRoleClaims FK_AspNetRoleClaims_AspNetRoles_RoleId; Type: FK CONSTRAINT; Schema: db; Owner: postgres
--

ALTER TABLE ONLY db."AspNetRoleClaims"
    ADD CONSTRAINT "FK_AspNetRoleClaims_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES db."AspNetRoles"("Id") ON DELETE CASCADE;


--
-- Name: AspNetUserClaims FK_AspNetUserClaims_AspNetUsers_UserId; Type: FK CONSTRAINT; Schema: db; Owner: postgres
--

ALTER TABLE ONLY db."AspNetUserClaims"
    ADD CONSTRAINT "FK_AspNetUserClaims_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES db."AspNetUsers"("Id") ON DELETE CASCADE;


--
-- Name: AspNetUserLogins FK_AspNetUserLogins_AspNetUsers_UserId; Type: FK CONSTRAINT; Schema: db; Owner: postgres
--

ALTER TABLE ONLY db."AspNetUserLogins"
    ADD CONSTRAINT "FK_AspNetUserLogins_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES db."AspNetUsers"("Id") ON DELETE CASCADE;


--
-- Name: AspNetUserRoles FK_AspNetUserRoles_AspNetRoles_RoleId; Type: FK CONSTRAINT; Schema: db; Owner: postgres
--

ALTER TABLE ONLY db."AspNetUserRoles"
    ADD CONSTRAINT "FK_AspNetUserRoles_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES db."AspNetRoles"("Id") ON DELETE CASCADE;


--
-- Name: AspNetUserRoles FK_AspNetUserRoles_AspNetUsers_UserId; Type: FK CONSTRAINT; Schema: db; Owner: postgres
--

ALTER TABLE ONLY db."AspNetUserRoles"
    ADD CONSTRAINT "FK_AspNetUserRoles_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES db."AspNetUsers"("Id") ON DELETE CASCADE;


--
-- Name: AspNetUserTokens FK_AspNetUserTokens_AspNetUsers_UserId; Type: FK CONSTRAINT; Schema: db; Owner: postgres
--

ALTER TABLE ONLY db."AspNetUserTokens"
    ADD CONSTRAINT "FK_AspNetUserTokens_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES db."AspNetUsers"("Id") ON DELETE CASCADE;


--
-- Name: DeviceDeviceGroup FK_DeviceDeviceGroup_DeviceGroups_DeviceGroupsId; Type: FK CONSTRAINT; Schema: db; Owner: postgres
--

ALTER TABLE ONLY db."DeviceDeviceGroup"
    ADD CONSTRAINT "FK_DeviceDeviceGroup_DeviceGroups_DeviceGroupsId" FOREIGN KEY ("DeviceGroupsId") REFERENCES db."DeviceGroups"("Id") ON DELETE CASCADE;


--
-- Name: DeviceDeviceGroup FK_DeviceDeviceGroup_Devices_DevicesId; Type: FK CONSTRAINT; Schema: db; Owner: postgres
--

ALTER TABLE ONLY db."DeviceDeviceGroup"
    ADD CONSTRAINT "FK_DeviceDeviceGroup_Devices_DevicesId" FOREIGN KEY ("DevicesId") REFERENCES db."Devices"("Id") ON DELETE CASCADE;


--
-- Name: DeviceEventLogs FK_DeviceEventLogs_Devices_DeviceId; Type: FK CONSTRAINT; Schema: db; Owner: postgres
--

ALTER TABLE ONLY db."DeviceEventLogs"
    ADD CONSTRAINT "FK_DeviceEventLogs_Devices_DeviceId" FOREIGN KEY ("DeviceId") REFERENCES db."Devices"("Id") ON DELETE CASCADE;


--
-- Name: DeviceEvents FK_DeviceEvents_Devices_DeviceId; Type: FK CONSTRAINT; Schema: db; Owner: postgres
--

ALTER TABLE ONLY db."DeviceEvents"
    ADD CONSTRAINT "FK_DeviceEvents_Devices_DeviceId" FOREIGN KEY ("DeviceId") REFERENCES db."Devices"("Id") ON DELETE CASCADE;


--
-- Name: DeviceFirmwareUpdates FK_DeviceFirmwareUpdates_Devices_DeviceId; Type: FK CONSTRAINT; Schema: db; Owner: postgres
--

ALTER TABLE ONLY db."DeviceFirmwareUpdates"
    ADD CONSTRAINT "FK_DeviceFirmwareUpdates_Devices_DeviceId" FOREIGN KEY ("DeviceId") REFERENCES db."Devices"("Id") ON DELETE CASCADE;


--
-- Name: DeviceFirmwareUpdates FK_DeviceFirmwareUpdates_FirmwareUpdates_FirmwareUpdateId; Type: FK CONSTRAINT; Schema: db; Owner: postgres
--

ALTER TABLE ONLY db."DeviceFirmwareUpdates"
    ADD CONSTRAINT "FK_DeviceFirmwareUpdates_FirmwareUpdates_FirmwareUpdateId" FOREIGN KEY ("FirmwareUpdateId") REFERENCES db."FirmwareUpdates"("Id") ON DELETE CASCADE;


--
-- Name: DeviceGroups FK_DeviceGroups_Rooms_RoomId; Type: FK CONSTRAINT; Schema: db; Owner: postgres
--

ALTER TABLE ONLY db."DeviceGroups"
    ADD CONSTRAINT "FK_DeviceGroups_Rooms_RoomId" FOREIGN KEY ("RoomId") REFERENCES db."Rooms"("Id");


--
-- Name: DeviceHistory FK_DeviceHistory_Devices_DeviceId; Type: FK CONSTRAINT; Schema: db; Owner: postgres
--

ALTER TABLE ONLY db."DeviceHistory"
    ADD CONSTRAINT "FK_DeviceHistory_Devices_DeviceId" FOREIGN KEY ("DeviceId") REFERENCES db."Devices"("Id") ON DELETE CASCADE;


--
-- Name: DevicePropertyChanges FK_DevicePropertyChanges_Devices_DeviceId; Type: FK CONSTRAINT; Schema: db; Owner: postgres
--

ALTER TABLE ONLY db."DevicePropertyChanges"
    ADD CONSTRAINT "FK_DevicePropertyChanges_Devices_DeviceId" FOREIGN KEY ("DeviceId") REFERENCES db."Devices"("Id") ON DELETE CASCADE;


--
-- Name: DeviceStates FK_DeviceStates_Devices_DeviceId; Type: FK CONSTRAINT; Schema: db; Owner: postgres
--

ALTER TABLE ONLY db."DeviceStates"
    ADD CONSTRAINT "FK_DeviceStates_Devices_DeviceId" FOREIGN KEY ("DeviceId") REFERENCES db."Devices"("Id") ON DELETE CASCADE;


--
-- Name: DeviceTypes FK_DeviceTypes_DeviceGroups_DeviceGroupId; Type: FK CONSTRAINT; Schema: db; Owner: postgres
--

ALTER TABLE ONLY db."DeviceTypes"
    ADD CONSTRAINT "FK_DeviceTypes_DeviceGroups_DeviceGroupId" FOREIGN KEY ("DeviceGroupId") REFERENCES db."DeviceGroups"("Id") ON DELETE RESTRICT;


--
-- Name: Devices FK_Devices_DeviceTypes_DeviceTypeId; Type: FK CONSTRAINT; Schema: db; Owner: postgres
--

ALTER TABLE ONLY db."Devices"
    ADD CONSTRAINT "FK_Devices_DeviceTypes_DeviceTypeId" FOREIGN KEY ("DeviceTypeId") REFERENCES db."DeviceTypes"("Id") ON DELETE RESTRICT;


--
-- Name: Devices FK_Devices_Rooms_RoomId; Type: FK CONSTRAINT; Schema: db; Owner: postgres
--

ALTER TABLE ONLY db."Devices"
    ADD CONSTRAINT "FK_Devices_Rooms_RoomId" FOREIGN KEY ("RoomId") REFERENCES db."Rooms"("Id") ON DELETE RESTRICT;


--
-- Name: EnvironmentalSettings FK_EnvironmentalSettings_ApplicationUsers_UserId; Type: FK CONSTRAINT; Schema: db; Owner: postgres
--

ALTER TABLE ONLY db."EnvironmentalSettings"
    ADD CONSTRAINT "FK_EnvironmentalSettings_ApplicationUsers_UserId" FOREIGN KEY ("UserId") REFERENCES db."ApplicationUsers"("Id") ON DELETE CASCADE;


--
-- Name: GroupMembers FK_GroupMembers_Devices_DeviceId; Type: FK CONSTRAINT; Schema: db; Owner: postgres
--

ALTER TABLE ONLY db."GroupMembers"
    ADD CONSTRAINT "FK_GroupMembers_Devices_DeviceId" FOREIGN KEY ("DeviceId") REFERENCES db."Devices"("Id") ON DELETE CASCADE;


--
-- Name: GroupMembers FK_GroupMembers_Groups_GroupId; Type: FK CONSTRAINT; Schema: db; Owner: postgres
--

ALTER TABLE ONLY db."GroupMembers"
    ADD CONSTRAINT "FK_GroupMembers_Groups_GroupId" FOREIGN KEY ("GroupId") REFERENCES db."Groups"("Id") ON DELETE CASCADE;


--
-- Name: GroupStateHistory FK_GroupStateHistory_Groups_GroupId; Type: FK CONSTRAINT; Schema: db; Owner: postgres
--

ALTER TABLE ONLY db."GroupStateHistory"
    ADD CONSTRAINT "FK_GroupStateHistory_Groups_GroupId" FOREIGN KEY ("GroupId") REFERENCES db."Groups"("Id") ON DELETE CASCADE;


--
-- Name: GroupStates FK_GroupStates_Groups_GroupId; Type: FK CONSTRAINT; Schema: db; Owner: postgres
--

ALTER TABLE ONLY db."GroupStates"
    ADD CONSTRAINT "FK_GroupStates_Groups_GroupId" FOREIGN KEY ("GroupId") REFERENCES db."Groups"("Id") ON DELETE CASCADE;


--
-- Name: RuleActions FK_RuleActions_Rules_RuleId; Type: FK CONSTRAINT; Schema: db; Owner: postgres
--

ALTER TABLE ONLY db."RuleActions"
    ADD CONSTRAINT "FK_RuleActions_Rules_RuleId" FOREIGN KEY ("RuleId") REFERENCES db."Rules"("Id") ON DELETE CASCADE;


--
-- Name: RuleConditions FK_RuleConditions_Rules_RuleId; Type: FK CONSTRAINT; Schema: db; Owner: postgres
--

ALTER TABLE ONLY db."RuleConditions"
    ADD CONSTRAINT "FK_RuleConditions_Rules_RuleId" FOREIGN KEY ("RuleId") REFERENCES db."Rules"("Id") ON DELETE CASCADE;


--
-- Name: RuleExecutionHistory FK_RuleExecutionHistory_Rules_RuleId; Type: FK CONSTRAINT; Schema: db; Owner: postgres
--

ALTER TABLE ONLY db."RuleExecutionHistory"
    ADD CONSTRAINT "FK_RuleExecutionHistory_Rules_RuleId" FOREIGN KEY ("RuleId") REFERENCES db."Rules"("Id") ON DELETE CASCADE;


--
-- Name: RuleTriggers FK_RuleTriggers_Rules_RuleId; Type: FK CONSTRAINT; Schema: db; Owner: postgres
--

ALTER TABLE ONLY db."RuleTriggers"
    ADD CONSTRAINT "FK_RuleTriggers_Rules_RuleId" FOREIGN KEY ("RuleId") REFERENCES db."Rules"("Id") ON DELETE CASCADE;


--
-- Name: UserDevicePermissions FK_UserDevicePermissions_ApplicationUsers_UserId; Type: FK CONSTRAINT; Schema: db; Owner: postgres
--

ALTER TABLE ONLY db."UserDevicePermissions"
    ADD CONSTRAINT "FK_UserDevicePermissions_ApplicationUsers_UserId" FOREIGN KEY ("UserId") REFERENCES db."ApplicationUsers"("Id") ON DELETE CASCADE;


--
-- Name: UserDevicePermissions FK_UserDevicePermissions_Devices_DeviceId; Type: FK CONSTRAINT; Schema: db; Owner: postgres
--

ALTER TABLE ONLY db."UserDevicePermissions"
    ADD CONSTRAINT "FK_UserDevicePermissions_Devices_DeviceId" FOREIGN KEY ("DeviceId") REFERENCES db."Devices"("Id") ON DELETE CASCADE;


--
-- Name: UserRoomPermissions FK_UserRoomPermissions_ApplicationUsers_UserId; Type: FK CONSTRAINT; Schema: db; Owner: postgres
--

ALTER TABLE ONLY db."UserRoomPermissions"
    ADD CONSTRAINT "FK_UserRoomPermissions_ApplicationUsers_UserId" FOREIGN KEY ("UserId") REFERENCES db."ApplicationUsers"("Id") ON DELETE CASCADE;


--
-- Name: UserRoomPermissions FK_UserRoomPermissions_Rooms_RoomId; Type: FK CONSTRAINT; Schema: db; Owner: postgres
--

ALTER TABLE ONLY db."UserRoomPermissions"
    ADD CONSTRAINT "FK_UserRoomPermissions_Rooms_RoomId" FOREIGN KEY ("RoomId") REFERENCES db."Rooms"("Id") ON DELETE CASCADE;


--
-- Name: UserSettings FK_UserSettings_ApplicationUsers_UserId; Type: FK CONSTRAINT; Schema: db; Owner: postgres
--

ALTER TABLE ONLY db."UserSettings"
    ADD CONSTRAINT "FK_UserSettings_ApplicationUsers_UserId" FOREIGN KEY ("UserId") REFERENCES db."ApplicationUsers"("Id") ON DELETE CASCADE;


--
-- Name: ApplicationUsers FK_ApplicationUsers_ApplicationUsers_CreatedById; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."ApplicationUsers"
    ADD CONSTRAINT "FK_ApplicationUsers_ApplicationUsers_CreatedById" FOREIGN KEY ("CreatedById") REFERENCES public."ApplicationUsers"("Id") ON DELETE RESTRICT;


--
-- Name: ApplicationUsers FK_ApplicationUsers_ApplicationUsers_UpdatedById; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."ApplicationUsers"
    ADD CONSTRAINT "FK_ApplicationUsers_ApplicationUsers_UpdatedById" FOREIGN KEY ("UpdatedById") REFERENCES public."ApplicationUsers"("Id") ON DELETE RESTRICT;


--
-- Name: AspNetRoleClaims FK_AspNetRoleClaims_AspNetRoles_RoleId; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."AspNetRoleClaims"
    ADD CONSTRAINT "FK_AspNetRoleClaims_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES public."AspNetRoles"("Id") ON DELETE CASCADE;


--
-- Name: AspNetUserClaims FK_AspNetUserClaims_AspNetUsers_UserId; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."AspNetUserClaims"
    ADD CONSTRAINT "FK_AspNetUserClaims_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES public."AspNetUsers"("Id") ON DELETE CASCADE;


--
-- Name: AspNetUserLogins FK_AspNetUserLogins_AspNetUsers_UserId; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."AspNetUserLogins"
    ADD CONSTRAINT "FK_AspNetUserLogins_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES public."AspNetUsers"("Id") ON DELETE CASCADE;


--
-- Name: AspNetUserRoles FK_AspNetUserRoles_AspNetRoles_RoleId; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."AspNetUserRoles"
    ADD CONSTRAINT "FK_AspNetUserRoles_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES public."AspNetRoles"("Id") ON DELETE CASCADE;


--
-- Name: AspNetUserRoles FK_AspNetUserRoles_AspNetUsers_UserId; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."AspNetUserRoles"
    ADD CONSTRAINT "FK_AspNetUserRoles_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES public."AspNetUsers"("Id") ON DELETE CASCADE;


--
-- Name: AspNetUserTokens FK_AspNetUserTokens_AspNetUsers_UserId; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."AspNetUserTokens"
    ADD CONSTRAINT "FK_AspNetUserTokens_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES public."AspNetUsers"("Id") ON DELETE CASCADE;


--
-- Name: Clusters FK_Clusters_ApplicationUsers_CreatedById; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."Clusters"
    ADD CONSTRAINT "FK_Clusters_ApplicationUsers_CreatedById" FOREIGN KEY ("CreatedById") REFERENCES public."ApplicationUsers"("Id") ON DELETE RESTRICT;


--
-- Name: Clusters FK_Clusters_ApplicationUsers_UpdatedById; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."Clusters"
    ADD CONSTRAINT "FK_Clusters_ApplicationUsers_UpdatedById" FOREIGN KEY ("UpdatedById") REFERENCES public."ApplicationUsers"("Id") ON DELETE RESTRICT;


--
-- Name: DeviceDeviceGroup FK_DeviceDeviceGroup_DeviceGroups_DeviceGroupsId; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."DeviceDeviceGroup"
    ADD CONSTRAINT "FK_DeviceDeviceGroup_DeviceGroups_DeviceGroupsId" FOREIGN KEY ("DeviceGroupsId") REFERENCES public."DeviceGroups"("Id") ON DELETE CASCADE;


--
-- Name: DeviceDeviceGroup FK_DeviceDeviceGroup_Devices_DevicesId; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."DeviceDeviceGroup"
    ADD CONSTRAINT "FK_DeviceDeviceGroup_Devices_DevicesId" FOREIGN KEY ("DevicesId") REFERENCES public."Devices"("Id") ON DELETE CASCADE;


--
-- Name: DeviceEvents FK_DeviceEvents_ApplicationUsers_CreatedById; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."DeviceEvents"
    ADD CONSTRAINT "FK_DeviceEvents_ApplicationUsers_CreatedById" FOREIGN KEY ("CreatedById") REFERENCES public."ApplicationUsers"("Id") ON DELETE RESTRICT;


--
-- Name: DeviceEvents FK_DeviceEvents_ApplicationUsers_UpdatedById; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."DeviceEvents"
    ADD CONSTRAINT "FK_DeviceEvents_ApplicationUsers_UpdatedById" FOREIGN KEY ("UpdatedById") REFERENCES public."ApplicationUsers"("Id") ON DELETE RESTRICT;


--
-- Name: DeviceEvents FK_DeviceEvents_Devices_DeviceId; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."DeviceEvents"
    ADD CONSTRAINT "FK_DeviceEvents_Devices_DeviceId" FOREIGN KEY ("DeviceId") REFERENCES public."Devices"("Id") ON DELETE CASCADE;


--
-- Name: DeviceFirmwareUpdates FK_DeviceFirmwareUpdates_ApplicationUsers_CreatedById; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."DeviceFirmwareUpdates"
    ADD CONSTRAINT "FK_DeviceFirmwareUpdates_ApplicationUsers_CreatedById" FOREIGN KEY ("CreatedById") REFERENCES public."ApplicationUsers"("Id") ON DELETE RESTRICT;


--
-- Name: DeviceFirmwareUpdates FK_DeviceFirmwareUpdates_ApplicationUsers_UpdatedById; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."DeviceFirmwareUpdates"
    ADD CONSTRAINT "FK_DeviceFirmwareUpdates_ApplicationUsers_UpdatedById" FOREIGN KEY ("UpdatedById") REFERENCES public."ApplicationUsers"("Id") ON DELETE RESTRICT;


--
-- Name: DeviceFirmwareUpdates FK_DeviceFirmwareUpdates_Devices_DeviceId; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."DeviceFirmwareUpdates"
    ADD CONSTRAINT "FK_DeviceFirmwareUpdates_Devices_DeviceId" FOREIGN KEY ("DeviceId") REFERENCES public."Devices"("Id") ON DELETE CASCADE;


--
-- Name: DeviceFirmwareUpdates FK_DeviceFirmwareUpdates_FirmwareUpdates_FirmwareUpdateId; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."DeviceFirmwareUpdates"
    ADD CONSTRAINT "FK_DeviceFirmwareUpdates_FirmwareUpdates_FirmwareUpdateId" FOREIGN KEY ("FirmwareUpdateId") REFERENCES public."FirmwareUpdates"("Id") ON DELETE CASCADE;


--
-- Name: DeviceGroupMembers FK_DeviceGroupMembers_ApplicationUsers_CreatedById; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."DeviceGroupMembers"
    ADD CONSTRAINT "FK_DeviceGroupMembers_ApplicationUsers_CreatedById" FOREIGN KEY ("CreatedById") REFERENCES public."ApplicationUsers"("Id") ON DELETE CASCADE;


--
-- Name: DeviceGroupMembers FK_DeviceGroupMembers_ApplicationUsers_UpdatedById; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."DeviceGroupMembers"
    ADD CONSTRAINT "FK_DeviceGroupMembers_ApplicationUsers_UpdatedById" FOREIGN KEY ("UpdatedById") REFERENCES public."ApplicationUsers"("Id");


--
-- Name: DeviceGroupMembers FK_DeviceGroupMembers_DeviceGroups_DeviceGroupId; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."DeviceGroupMembers"
    ADD CONSTRAINT "FK_DeviceGroupMembers_DeviceGroups_DeviceGroupId" FOREIGN KEY ("DeviceGroupId") REFERENCES public."DeviceGroups"("Id") ON DELETE CASCADE;


--
-- Name: DeviceGroupMembers FK_DeviceGroupMembers_Devices_DeviceId; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."DeviceGroupMembers"
    ADD CONSTRAINT "FK_DeviceGroupMembers_Devices_DeviceId" FOREIGN KEY ("DeviceId") REFERENCES public."Devices"("Id") ON DELETE CASCADE;


--
-- Name: DeviceGroups FK_DeviceGroups_ApplicationUsers_CreatedById; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."DeviceGroups"
    ADD CONSTRAINT "FK_DeviceGroups_ApplicationUsers_CreatedById" FOREIGN KEY ("CreatedById") REFERENCES public."ApplicationUsers"("Id") ON DELETE RESTRICT;


--
-- Name: DeviceGroups FK_DeviceGroups_ApplicationUsers_UpdatedById; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."DeviceGroups"
    ADD CONSTRAINT "FK_DeviceGroups_ApplicationUsers_UpdatedById" FOREIGN KEY ("UpdatedById") REFERENCES public."ApplicationUsers"("Id") ON DELETE RESTRICT;


--
-- Name: DeviceGroups FK_DeviceGroups_Rooms_RoomId; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."DeviceGroups"
    ADD CONSTRAINT "FK_DeviceGroups_Rooms_RoomId" FOREIGN KEY ("RoomId") REFERENCES public."Rooms"("Id");


--
-- Name: DeviceHistory FK_DeviceHistory_ApplicationUsers_CreatedById; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."DeviceHistory"
    ADD CONSTRAINT "FK_DeviceHistory_ApplicationUsers_CreatedById" FOREIGN KEY ("CreatedById") REFERENCES public."ApplicationUsers"("Id") ON DELETE RESTRICT;


--
-- Name: DeviceHistory FK_DeviceHistory_ApplicationUsers_UpdatedById; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."DeviceHistory"
    ADD CONSTRAINT "FK_DeviceHistory_ApplicationUsers_UpdatedById" FOREIGN KEY ("UpdatedById") REFERENCES public."ApplicationUsers"("Id") ON DELETE RESTRICT;


--
-- Name: DeviceHistory FK_DeviceHistory_Devices_DeviceId; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."DeviceHistory"
    ADD CONSTRAINT "FK_DeviceHistory_Devices_DeviceId" FOREIGN KEY ("DeviceId") REFERENCES public."Devices"("Id") ON DELETE CASCADE;


--
-- Name: DevicePropertyChanges FK_DevicePropertyChanges_ApplicationUsers_CreatedById; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."DevicePropertyChanges"
    ADD CONSTRAINT "FK_DevicePropertyChanges_ApplicationUsers_CreatedById" FOREIGN KEY ("CreatedById") REFERENCES public."ApplicationUsers"("Id") ON DELETE RESTRICT;


--
-- Name: DevicePropertyChanges FK_DevicePropertyChanges_ApplicationUsers_UpdatedById; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."DevicePropertyChanges"
    ADD CONSTRAINT "FK_DevicePropertyChanges_ApplicationUsers_UpdatedById" FOREIGN KEY ("UpdatedById") REFERENCES public."ApplicationUsers"("Id") ON DELETE RESTRICT;


--
-- Name: DevicePropertyChanges FK_DevicePropertyChanges_Devices_DeviceId; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."DevicePropertyChanges"
    ADD CONSTRAINT "FK_DevicePropertyChanges_Devices_DeviceId" FOREIGN KEY ("DeviceId") REFERENCES public."Devices"("Id") ON DELETE CASCADE;


--
-- Name: DeviceStates FK_DeviceStates_ApplicationUsers_CreatedById; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."DeviceStates"
    ADD CONSTRAINT "FK_DeviceStates_ApplicationUsers_CreatedById" FOREIGN KEY ("CreatedById") REFERENCES public."ApplicationUsers"("Id") ON DELETE RESTRICT;


--
-- Name: DeviceStates FK_DeviceStates_ApplicationUsers_UpdatedById; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."DeviceStates"
    ADD CONSTRAINT "FK_DeviceStates_ApplicationUsers_UpdatedById" FOREIGN KEY ("UpdatedById") REFERENCES public."ApplicationUsers"("Id") ON DELETE RESTRICT;


--
-- Name: DeviceStates FK_DeviceStates_Devices_DeviceId; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."DeviceStates"
    ADD CONSTRAINT "FK_DeviceStates_Devices_DeviceId" FOREIGN KEY ("DeviceId") REFERENCES public."Devices"("Id") ON DELETE CASCADE;


--
-- Name: DeviceTypes FK_DeviceTypes_ApplicationUsers_CreatedById; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."DeviceTypes"
    ADD CONSTRAINT "FK_DeviceTypes_ApplicationUsers_CreatedById" FOREIGN KEY ("CreatedById") REFERENCES public."ApplicationUsers"("Id") ON DELETE RESTRICT;


--
-- Name: DeviceTypes FK_DeviceTypes_ApplicationUsers_UpdatedById; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."DeviceTypes"
    ADD CONSTRAINT "FK_DeviceTypes_ApplicationUsers_UpdatedById" FOREIGN KEY ("UpdatedById") REFERENCES public."ApplicationUsers"("Id") ON DELETE RESTRICT;


--
-- Name: DeviceTypes FK_DeviceTypes_DeviceGroups_DeviceGroupId; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."DeviceTypes"
    ADD CONSTRAINT "FK_DeviceTypes_DeviceGroups_DeviceGroupId" FOREIGN KEY ("DeviceGroupId") REFERENCES public."DeviceGroups"("Id") ON DELETE RESTRICT;


--
-- Name: Devices FK_Devices_ApplicationUsers_CreatedById; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."Devices"
    ADD CONSTRAINT "FK_Devices_ApplicationUsers_CreatedById" FOREIGN KEY ("CreatedById") REFERENCES public."ApplicationUsers"("Id") ON DELETE RESTRICT;


--
-- Name: Devices FK_Devices_ApplicationUsers_UpdatedById; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."Devices"
    ADD CONSTRAINT "FK_Devices_ApplicationUsers_UpdatedById" FOREIGN KEY ("UpdatedById") REFERENCES public."ApplicationUsers"("Id") ON DELETE RESTRICT;


--
-- Name: Devices FK_Devices_DeviceTypes_DeviceTypeId; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."Devices"
    ADD CONSTRAINT "FK_Devices_DeviceTypes_DeviceTypeId" FOREIGN KEY ("DeviceTypeId") REFERENCES public."DeviceTypes"("Id") ON DELETE RESTRICT;


--
-- Name: Devices FK_Devices_Rooms_RoomId; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."Devices"
    ADD CONSTRAINT "FK_Devices_Rooms_RoomId" FOREIGN KEY ("RoomId") REFERENCES public."Rooms"("Id") ON DELETE RESTRICT;


--
-- Name: EnvironmentalSettings FK_EnvironmentalSettings_ApplicationUsers_CreatedById; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."EnvironmentalSettings"
    ADD CONSTRAINT "FK_EnvironmentalSettings_ApplicationUsers_CreatedById" FOREIGN KEY ("CreatedById") REFERENCES public."ApplicationUsers"("Id") ON DELETE RESTRICT;


--
-- Name: EnvironmentalSettings FK_EnvironmentalSettings_ApplicationUsers_UpdatedById; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."EnvironmentalSettings"
    ADD CONSTRAINT "FK_EnvironmentalSettings_ApplicationUsers_UpdatedById" FOREIGN KEY ("UpdatedById") REFERENCES public."ApplicationUsers"("Id") ON DELETE RESTRICT;


--
-- Name: EnvironmentalSettings FK_EnvironmentalSettings_ApplicationUsers_UserId; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."EnvironmentalSettings"
    ADD CONSTRAINT "FK_EnvironmentalSettings_ApplicationUsers_UserId" FOREIGN KEY ("UserId") REFERENCES public."ApplicationUsers"("Id") ON DELETE CASCADE;


--
-- Name: FirmwareUpdates FK_FirmwareUpdates_ApplicationUsers_CreatedById; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."FirmwareUpdates"
    ADD CONSTRAINT "FK_FirmwareUpdates_ApplicationUsers_CreatedById" FOREIGN KEY ("CreatedById") REFERENCES public."ApplicationUsers"("Id") ON DELETE RESTRICT;


--
-- Name: FirmwareUpdates FK_FirmwareUpdates_ApplicationUsers_UpdatedById; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."FirmwareUpdates"
    ADD CONSTRAINT "FK_FirmwareUpdates_ApplicationUsers_UpdatedById" FOREIGN KEY ("UpdatedById") REFERENCES public."ApplicationUsers"("Id") ON DELETE RESTRICT;


--
-- Name: GroupMembers FK_GroupMembers_ApplicationUsers_CreatedById; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."GroupMembers"
    ADD CONSTRAINT "FK_GroupMembers_ApplicationUsers_CreatedById" FOREIGN KEY ("CreatedById") REFERENCES public."ApplicationUsers"("Id") ON DELETE RESTRICT;


--
-- Name: GroupMembers FK_GroupMembers_ApplicationUsers_UpdatedById; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."GroupMembers"
    ADD CONSTRAINT "FK_GroupMembers_ApplicationUsers_UpdatedById" FOREIGN KEY ("UpdatedById") REFERENCES public."ApplicationUsers"("Id") ON DELETE RESTRICT;


--
-- Name: GroupMembers FK_GroupMembers_Devices_DeviceId; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."GroupMembers"
    ADD CONSTRAINT "FK_GroupMembers_Devices_DeviceId" FOREIGN KEY ("DeviceId") REFERENCES public."Devices"("Id") ON DELETE CASCADE;


--
-- Name: GroupMembers FK_GroupMembers_Devices_DeviceId1; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."GroupMembers"
    ADD CONSTRAINT "FK_GroupMembers_Devices_DeviceId1" FOREIGN KEY ("DeviceId1") REFERENCES public."Devices"("Id") ON DELETE CASCADE;


--
-- Name: GroupMembers FK_GroupMembers_Groups_GroupId; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."GroupMembers"
    ADD CONSTRAINT "FK_GroupMembers_Groups_GroupId" FOREIGN KEY ("GroupId") REFERENCES public."Groups"("Id") ON DELETE CASCADE;


--
-- Name: GroupMembers FK_GroupMembers_Groups_GroupId1; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."GroupMembers"
    ADD CONSTRAINT "FK_GroupMembers_Groups_GroupId1" FOREIGN KEY ("GroupId1") REFERENCES public."Groups"("Id") ON DELETE CASCADE;


--
-- Name: GroupStateHistory FK_GroupStateHistory_ApplicationUsers_CreatedById; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."GroupStateHistory"
    ADD CONSTRAINT "FK_GroupStateHistory_ApplicationUsers_CreatedById" FOREIGN KEY ("CreatedById") REFERENCES public."ApplicationUsers"("Id") ON DELETE RESTRICT;


--
-- Name: GroupStateHistory FK_GroupStateHistory_ApplicationUsers_UpdatedById; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."GroupStateHistory"
    ADD CONSTRAINT "FK_GroupStateHistory_ApplicationUsers_UpdatedById" FOREIGN KEY ("UpdatedById") REFERENCES public."ApplicationUsers"("Id") ON DELETE RESTRICT;


--
-- Name: GroupStateHistory FK_GroupStateHistory_Groups_GroupId; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."GroupStateHistory"
    ADD CONSTRAINT "FK_GroupStateHistory_Groups_GroupId" FOREIGN KEY ("GroupId") REFERENCES public."Groups"("Id") ON DELETE CASCADE;


--
-- Name: GroupStateHistory FK_GroupStateHistory_Groups_GroupId1; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."GroupStateHistory"
    ADD CONSTRAINT "FK_GroupStateHistory_Groups_GroupId1" FOREIGN KEY ("GroupId1") REFERENCES public."Groups"("Id") ON DELETE CASCADE;


--
-- Name: GroupStates FK_GroupStates_ApplicationUsers_CreatedById; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."GroupStates"
    ADD CONSTRAINT "FK_GroupStates_ApplicationUsers_CreatedById" FOREIGN KEY ("CreatedById") REFERENCES public."ApplicationUsers"("Id") ON DELETE RESTRICT;


--
-- Name: GroupStates FK_GroupStates_ApplicationUsers_UpdatedById; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."GroupStates"
    ADD CONSTRAINT "FK_GroupStates_ApplicationUsers_UpdatedById" FOREIGN KEY ("UpdatedById") REFERENCES public."ApplicationUsers"("Id") ON DELETE RESTRICT;


--
-- Name: GroupStates FK_GroupStates_Groups_GroupId; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."GroupStates"
    ADD CONSTRAINT "FK_GroupStates_Groups_GroupId" FOREIGN KEY ("GroupId") REFERENCES public."Groups"("Id") ON DELETE CASCADE;


--
-- Name: Groups FK_Groups_ApplicationUsers_CreatedById; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."Groups"
    ADD CONSTRAINT "FK_Groups_ApplicationUsers_CreatedById" FOREIGN KEY ("CreatedById") REFERENCES public."ApplicationUsers"("Id") ON DELETE RESTRICT;


--
-- Name: Groups FK_Groups_ApplicationUsers_UpdatedById; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."Groups"
    ADD CONSTRAINT "FK_Groups_ApplicationUsers_UpdatedById" FOREIGN KEY ("UpdatedById") REFERENCES public."ApplicationUsers"("Id") ON DELETE RESTRICT;


--
-- Name: Notifications FK_Notifications_ApplicationUsers_CreatedById; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."Notifications"
    ADD CONSTRAINT "FK_Notifications_ApplicationUsers_CreatedById" FOREIGN KEY ("CreatedById") REFERENCES public."ApplicationUsers"("Id") ON DELETE RESTRICT;


--
-- Name: Notifications FK_Notifications_ApplicationUsers_UpdatedById; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."Notifications"
    ADD CONSTRAINT "FK_Notifications_ApplicationUsers_UpdatedById" FOREIGN KEY ("UpdatedById") REFERENCES public."ApplicationUsers"("Id") ON DELETE RESTRICT;


--
-- Name: Rooms FK_Rooms_ApplicationUsers_CreatedById; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."Rooms"
    ADD CONSTRAINT "FK_Rooms_ApplicationUsers_CreatedById" FOREIGN KEY ("CreatedById") REFERENCES public."ApplicationUsers"("Id") ON DELETE RESTRICT;


--
-- Name: Rooms FK_Rooms_ApplicationUsers_UpdatedById; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."Rooms"
    ADD CONSTRAINT "FK_Rooms_ApplicationUsers_UpdatedById" FOREIGN KEY ("UpdatedById") REFERENCES public."ApplicationUsers"("Id") ON DELETE RESTRICT;


--
-- Name: RuleActions FK_RuleActions_ApplicationUsers_CreatedById; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."RuleActions"
    ADD CONSTRAINT "FK_RuleActions_ApplicationUsers_CreatedById" FOREIGN KEY ("CreatedById") REFERENCES public."ApplicationUsers"("Id") ON DELETE RESTRICT;


--
-- Name: RuleActions FK_RuleActions_ApplicationUsers_UpdatedById; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."RuleActions"
    ADD CONSTRAINT "FK_RuleActions_ApplicationUsers_UpdatedById" FOREIGN KEY ("UpdatedById") REFERENCES public."ApplicationUsers"("Id") ON DELETE RESTRICT;


--
-- Name: RuleActions FK_RuleActions_Rules_RuleId; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."RuleActions"
    ADD CONSTRAINT "FK_RuleActions_Rules_RuleId" FOREIGN KEY ("RuleId") REFERENCES public."Rules"("Id") ON DELETE CASCADE;


--
-- Name: RuleActions FK_RuleActions_Rules_RuleId1; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."RuleActions"
    ADD CONSTRAINT "FK_RuleActions_Rules_RuleId1" FOREIGN KEY ("RuleId1") REFERENCES public."Rules"("Id") ON DELETE CASCADE;


--
-- Name: RuleConditions FK_RuleConditions_ApplicationUsers_CreatedById; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."RuleConditions"
    ADD CONSTRAINT "FK_RuleConditions_ApplicationUsers_CreatedById" FOREIGN KEY ("CreatedById") REFERENCES public."ApplicationUsers"("Id") ON DELETE RESTRICT;


--
-- Name: RuleConditions FK_RuleConditions_ApplicationUsers_UpdatedById; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."RuleConditions"
    ADD CONSTRAINT "FK_RuleConditions_ApplicationUsers_UpdatedById" FOREIGN KEY ("UpdatedById") REFERENCES public."ApplicationUsers"("Id") ON DELETE RESTRICT;


--
-- Name: RuleConditions FK_RuleConditions_Rules_RuleId; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."RuleConditions"
    ADD CONSTRAINT "FK_RuleConditions_Rules_RuleId" FOREIGN KEY ("RuleId") REFERENCES public."Rules"("Id") ON DELETE CASCADE;


--
-- Name: RuleConditions FK_RuleConditions_Rules_RuleId1; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."RuleConditions"
    ADD CONSTRAINT "FK_RuleConditions_Rules_RuleId1" FOREIGN KEY ("RuleId1") REFERENCES public."Rules"("Id") ON DELETE CASCADE;


--
-- Name: RuleExecutionHistory FK_RuleExecutionHistory_ApplicationUsers_CreatedById; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."RuleExecutionHistory"
    ADD CONSTRAINT "FK_RuleExecutionHistory_ApplicationUsers_CreatedById" FOREIGN KEY ("CreatedById") REFERENCES public."ApplicationUsers"("Id") ON DELETE RESTRICT;


--
-- Name: RuleExecutionHistory FK_RuleExecutionHistory_ApplicationUsers_UpdatedById; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."RuleExecutionHistory"
    ADD CONSTRAINT "FK_RuleExecutionHistory_ApplicationUsers_UpdatedById" FOREIGN KEY ("UpdatedById") REFERENCES public."ApplicationUsers"("Id") ON DELETE RESTRICT;


--
-- Name: RuleExecutionHistory FK_RuleExecutionHistory_Rules_RuleId; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."RuleExecutionHistory"
    ADD CONSTRAINT "FK_RuleExecutionHistory_Rules_RuleId" FOREIGN KEY ("RuleId") REFERENCES public."Rules"("Id") ON DELETE CASCADE;


--
-- Name: RuleExecutionHistory FK_RuleExecutionHistory_Rules_RuleId1; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."RuleExecutionHistory"
    ADD CONSTRAINT "FK_RuleExecutionHistory_Rules_RuleId1" FOREIGN KEY ("RuleId1") REFERENCES public."Rules"("Id") ON DELETE CASCADE;


--
-- Name: RuleTriggers FK_RuleTriggers_ApplicationUsers_CreatedById; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."RuleTriggers"
    ADD CONSTRAINT "FK_RuleTriggers_ApplicationUsers_CreatedById" FOREIGN KEY ("CreatedById") REFERENCES public."ApplicationUsers"("Id") ON DELETE RESTRICT;


--
-- Name: RuleTriggers FK_RuleTriggers_ApplicationUsers_UpdatedById; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."RuleTriggers"
    ADD CONSTRAINT "FK_RuleTriggers_ApplicationUsers_UpdatedById" FOREIGN KEY ("UpdatedById") REFERENCES public."ApplicationUsers"("Id") ON DELETE RESTRICT;


--
-- Name: RuleTriggers FK_RuleTriggers_Rules_RuleId; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."RuleTriggers"
    ADD CONSTRAINT "FK_RuleTriggers_Rules_RuleId" FOREIGN KEY ("RuleId") REFERENCES public."Rules"("Id") ON DELETE CASCADE;


--
-- Name: RuleTriggers FK_RuleTriggers_Rules_RuleId1; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."RuleTriggers"
    ADD CONSTRAINT "FK_RuleTriggers_Rules_RuleId1" FOREIGN KEY ("RuleId1") REFERENCES public."Rules"("Id") ON DELETE CASCADE;


--
-- Name: Rules FK_Rules_ApplicationUsers_CreatedById; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."Rules"
    ADD CONSTRAINT "FK_Rules_ApplicationUsers_CreatedById" FOREIGN KEY ("CreatedById") REFERENCES public."ApplicationUsers"("Id") ON DELETE RESTRICT;


--
-- Name: Rules FK_Rules_ApplicationUsers_UpdatedById; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."Rules"
    ADD CONSTRAINT "FK_Rules_ApplicationUsers_UpdatedById" FOREIGN KEY ("UpdatedById") REFERENCES public."ApplicationUsers"("Id") ON DELETE RESTRICT;


--
-- Name: UserDevicePermissions FK_UserDevicePermissions_ApplicationUsers_CreatedById; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."UserDevicePermissions"
    ADD CONSTRAINT "FK_UserDevicePermissions_ApplicationUsers_CreatedById" FOREIGN KEY ("CreatedById") REFERENCES public."ApplicationUsers"("Id") ON DELETE RESTRICT;


--
-- Name: UserDevicePermissions FK_UserDevicePermissions_ApplicationUsers_UpdatedById; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."UserDevicePermissions"
    ADD CONSTRAINT "FK_UserDevicePermissions_ApplicationUsers_UpdatedById" FOREIGN KEY ("UpdatedById") REFERENCES public."ApplicationUsers"("Id") ON DELETE RESTRICT;


--
-- Name: UserDevicePermissions FK_UserDevicePermissions_ApplicationUsers_UserId; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."UserDevicePermissions"
    ADD CONSTRAINT "FK_UserDevicePermissions_ApplicationUsers_UserId" FOREIGN KEY ("UserId") REFERENCES public."ApplicationUsers"("Id") ON DELETE CASCADE;


--
-- Name: UserDevicePermissions FK_UserDevicePermissions_Devices_DeviceId; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."UserDevicePermissions"
    ADD CONSTRAINT "FK_UserDevicePermissions_Devices_DeviceId" FOREIGN KEY ("DeviceId") REFERENCES public."Devices"("Id") ON DELETE CASCADE;


--
-- Name: UserRoomPermissions FK_UserRoomPermissions_ApplicationUsers_CreatedById; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."UserRoomPermissions"
    ADD CONSTRAINT "FK_UserRoomPermissions_ApplicationUsers_CreatedById" FOREIGN KEY ("CreatedById") REFERENCES public."ApplicationUsers"("Id") ON DELETE RESTRICT;


--
-- Name: UserRoomPermissions FK_UserRoomPermissions_ApplicationUsers_UpdatedById; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."UserRoomPermissions"
    ADD CONSTRAINT "FK_UserRoomPermissions_ApplicationUsers_UpdatedById" FOREIGN KEY ("UpdatedById") REFERENCES public."ApplicationUsers"("Id") ON DELETE RESTRICT;


--
-- Name: UserRoomPermissions FK_UserRoomPermissions_ApplicationUsers_UserId; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."UserRoomPermissions"
    ADD CONSTRAINT "FK_UserRoomPermissions_ApplicationUsers_UserId" FOREIGN KEY ("UserId") REFERENCES public."ApplicationUsers"("Id") ON DELETE CASCADE;


--
-- Name: UserRoomPermissions FK_UserRoomPermissions_Rooms_RoomId; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."UserRoomPermissions"
    ADD CONSTRAINT "FK_UserRoomPermissions_Rooms_RoomId" FOREIGN KEY ("RoomId") REFERENCES public."Rooms"("Id") ON DELETE CASCADE;


--
-- Name: UserSettings FK_UserSettings_ApplicationUsers_CreatedById; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."UserSettings"
    ADD CONSTRAINT "FK_UserSettings_ApplicationUsers_CreatedById" FOREIGN KEY ("CreatedById") REFERENCES public."ApplicationUsers"("Id") ON DELETE RESTRICT;


--
-- Name: UserSettings FK_UserSettings_ApplicationUsers_UpdatedById; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."UserSettings"
    ADD CONSTRAINT "FK_UserSettings_ApplicationUsers_UpdatedById" FOREIGN KEY ("UpdatedById") REFERENCES public."ApplicationUsers"("Id") ON DELETE RESTRICT;


--
-- Name: UserSettings FK_UserSettings_ApplicationUsers_UserId; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."UserSettings"
    ADD CONSTRAINT "FK_UserSettings_ApplicationUsers_UserId" FOREIGN KEY ("UserId") REFERENCES public."ApplicationUsers"("Id") ON DELETE CASCADE;


--
-- Name: UserSettings FK_UserSettings_ApplicationUsers_UserId1; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."UserSettings"
    ADD CONSTRAINT "FK_UserSettings_ApplicationUsers_UserId1" FOREIGN KEY ("UserId1") REFERENCES public."ApplicationUsers"("Id") ON DELETE CASCADE;


--
-- PostgreSQL database dump complete
--

