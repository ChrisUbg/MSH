@page "/rooms"
@using MSH.Infrastructure.Entities
@using MSH.Web.Services
@inject IRoomService RoomService
@inject IDeviceService DeviceService

<PageTitle>Room Management</PageTitle>

<div class="container">
    <h1>Room Management</h1>
    <div class="mb-3">
        <button class="btn btn-primary" @onclick="ShowAddRoomModal">Add Room</button>
    </div>
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Name</th>
                <th>Type</th>
                <th>Location</th>
                <th>Devices</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @if (rooms == null)
            {
                <tr><td colspan="5">Loading...</td></tr>
            }
            else if (!rooms.Any())
            {
                <tr><td colspan="5">No rooms found.</td></tr>
            }
            else
            {
                @foreach (var room in rooms)
                {
                    <tr>
                        <td>@room.Name</td>
                        <td>@room.Description</td>
                        <td>@room.Floor</td>
                        <td>
                            @if (room.Devices != null && room.Devices.Any())
                            {
                                <ul>
                                    @foreach (var device in room.Devices)
                                    {
                                        <li>
                                            @device.Name
                                            <button class="btn btn-sm btn-outline-danger ms-2" @onclick="() => RemoveDeviceFromRoom(device.Id)">Remove</button>
                                        </li>
                                    }
                                </ul>
                            }
                            else
                            {
                                <span class="text-muted">No devices</span>
                            }
                        </td>
                        <td>
                            <button class="btn btn-sm btn-secondary me-2" @onclick="() => EditRoom(room)">Edit</button>
                            <button class="btn btn-sm btn-info me-2" @onclick="() => ShowAssignDeviceModal(room.Id)">Assign Device</button>
                            <button class="btn btn-sm btn-danger" @onclick="() => DeleteRoom(room.Id)">Delete</button>
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>

    @if (showRoomModal)
    {
        <div class="modal fade show" style="display: block;" tabindex="-1">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">@((editingRoom?.Id ?? 0) == 0 ? "Add Room" : "Edit Room")</h5>
                        <button type="button" class="btn-close" @onclick="HideRoomModal"></button>
                    </div>
                    <div class="modal-body">
                        <div class="mb-3">
                            <label class="form-label">Name</label>
                            <input type="text" class="form-control" @bind="editingRoom.Name" />
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Description</label>
                            <input type="text" class="form-control" @bind="editingRoom.Description" />
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Floor</label>
                            <input type="number" class="form-control" @bind="editingRoom.Floor" />
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" @onclick="HideRoomModal">Cancel</button>
                        <button type="button" class="btn btn-primary" @onclick="SaveRoom">Save</button>
                    </div>
                </div>
            </div>
        </div>
        <div class="modal-backdrop fade show"></div>
    }

    @if (showAssignDeviceModal)
    {
        <div class="modal fade show" style="display: block;" tabindex="-1">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">Assign Device to Room</h5>
                        <button type="button" class="btn-close" @onclick="HideAssignDeviceModal"></button>
                    </div>
                    <div class="modal-body">
                        <div class="mb-3">
                            <label class="form-label">Select Device</label>
                            <select class="form-select" @bind="selectedDeviceId">
                                <option value="">-- Select a device --</option>
                                @foreach (var device in unassignedDevices)
                                {
                                    <option value="@device.Id">@device.Name (@device.DeviceTypeId)</option>
                                }
                            </select>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" @onclick="HideAssignDeviceModal">Cancel</button>
                        <button type="button" class="btn btn-primary" @onclick="AssignDeviceToRoom">Assign</button>
                    </div>
                </div>
            </div>
        </div>
        <div class="modal-backdrop fade show"></div>
    }
</div>

@code {
    private List<Room>? rooms;
    private Room editingRoom = new();
    private bool showRoomModal = false;
    private bool showAssignDeviceModal = false;
    private int assignRoomId;
    private int selectedDeviceId;
    private List<Device> unassignedDevices = new();

    protected override async Task OnInitializedAsync()
    {
        await LoadRooms();
    }

    private async Task LoadRooms()
    {
        rooms = await RoomService.GetRoomsAsync();
        StateHasChanged();
    }

    private void ShowAddRoomModal()
    {
        editingRoom = new Room();
        showRoomModal = true;
    }

    private void HideRoomModal()
    {
        showRoomModal = false;
    }

    private void EditRoom(Room room)
    {
        editingRoom = new Room
        {
            Id = room.Id,
            Name = room.Name,
            Description = room.Description,
            Floor = room.Floor
        };
        showRoomModal = true;
    }

    private async Task SaveRoom()
    {
        if (editingRoom.Id == 0)
        {
            await RoomService.AddRoomAsync(editingRoom);
        }
        else
        {
            await RoomService.UpdateRoomAsync(editingRoom);
        }
        showRoomModal = false;
        await LoadRooms();
    }

    private async Task DeleteRoom(int roomId)
    {
        await RoomService.DeleteRoomAsync(roomId);
        await LoadRooms();
    }

    private async Task ShowAssignDeviceModal(int roomId)
    {
        assignRoomId = roomId;
        unassignedDevices = await DeviceService.GetUnassignedDevicesAsync();
        selectedDeviceId = 0;
        showAssignDeviceModal = true;
        StateHasChanged();
    }

    private void HideAssignDeviceModal()
    {
        showAssignDeviceModal = false;
    }

    private async Task AssignDeviceToRoom()
    {
        if (selectedDeviceId != 0 && assignRoomId != 0)
        {
            await RoomService.AssignDeviceToRoomAsync(selectedDeviceId, assignRoomId);
            showAssignDeviceModal = false;
            await LoadRooms();
        }
    }

    private async Task RemoveDeviceFromRoom(int deviceId)
    {
        await RoomService.RemoveDeviceFromRoomAsync(deviceId);
        await LoadRooms();
    }
} 