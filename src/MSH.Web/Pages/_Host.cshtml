@page "/"
@namespace MSH.Web.Pages
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@using Microsoft.AspNetCore.Components.Web

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <base href="~/" />
    <link rel="stylesheet" href="css/bootstrap/bootstrap.min.css" />
    <link rel="stylesheet" href="css/site.css" />
    <link rel="stylesheet" href="css/notifications.css" />
    <link rel="stylesheet" href="css/environmental-monitor.css" />
    <link rel="stylesheet" href="css/environmental-settings.css" />
    <link href="MSH.Web.styles.css" rel="stylesheet" />
    <link rel="icon" type="image/png" href="favicon.png"/>
    <component type="typeof(HeadOutlet)" render-mode="ServerPrerendered" />
</head>
<body>
    <app>
        <component type="typeof(App)" render-mode="Server" />
    </app>
    <div id="blazor-error-ui">
        <environment include="Staging,Production">
            An error has occurred. This application may no longer respond until reloaded.
        </environment>
        <environment include="Development">
            An unhandled exception has occurred. See browser dev tools for details.
        </environment>
        <a href="" class="reload">Reload</a>
        <a class="dismiss">🗙</a>
    </div>
    <script src="_framework/blazor.server.js"></script>
    <script src="_content/Microsoft.AspNetCore.Components.Web.Extensions/script.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/6.0.1/signalr.min.js"></script>
    <script>
        window.addEventListener('error', function (event) {
            console.error('Script error:', event);
        });

        // SignalR connection for real-time device state updates
        let deviceStateConnection = null;

        window.deviceStateHub = {
            connect: async function () {
                try {
                    deviceStateConnection = new signalR.HubConnectionBuilder()
                        .withUrl("/deviceStateHub")
                        .withAutomaticReconnect()
                        .build();

                    // Handle device state changes
                    deviceStateConnection.on("DeviceStateChanged", function (nodeId, deviceState) {
                        console.log("Device state changed:", nodeId, deviceState);
                        // Trigger Blazor component update
                        DotNet.invokeMethodAsync('MSH.Web', 'OnDeviceStateChanged', nodeId, deviceState);
                    });

                    // Handle device errors
                    deviceStateConnection.on("DeviceError", function (nodeId, error) {
                        console.log("Device error:", nodeId, error);
                        // Trigger Blazor component update
                        DotNet.invokeMethodAsync('MSH.Web', 'OnDeviceError', nodeId, error);
                    });

                    await deviceStateConnection.start();
                    console.log("Device state hub connected");
                } catch (err) {
                    console.error("Error connecting to device state hub:", err);
                }
            },

            joinDeviceGroup: async function (nodeId) {
                if (deviceStateConnection && deviceStateConnection.state === signalR.HubConnectionState.Connected) {
                    try {
                        await deviceStateConnection.invoke("JoinDeviceGroup", nodeId);
                        console.log("Joined device group:", nodeId);
                    } catch (err) {
                        console.error("Error joining device group:", err);
                    }
                }
            },

            leaveDeviceGroup: async function (nodeId) {
                if (deviceStateConnection && deviceStateConnection.state === signalR.HubConnectionState.Connected) {
                    try {
                        await deviceStateConnection.invoke("LeaveDeviceGroup", nodeId);
                        console.log("Left device group:", nodeId);
                    } catch (err) {
                        console.error("Error leaving device group:", err);
                    }
                }
            }
        };

        // Connect to SignalR when page loads
        document.addEventListener('DOMContentLoaded', function () {
            window.deviceStateHub.connect();
        });
    </script>
</body>
</html>
