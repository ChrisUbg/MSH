FROM mcr.microsoft.com/dotnet/aspnet:8.0 AS base
WORKDIR /app
EXPOSE 8082

FROM mcr.microsoft.com/dotnet/sdk:8.0 AS build
WORKDIR /src

# Copy project files
COPY ["src/MSH.Web/MSH.Web.csproj", "src/MSH.Web/"]
COPY ["src/MSH.Core/MSH.Core.csproj", "src/MSH.Core/"]
COPY ["src/MSH.Infrastructure/MSH.Infrastructure.csproj", "src/MSH.Infrastructure/"]
RUN dotnet restore "src/MSH.Web/MSH.Web.csproj"

# Copy source code
COPY . .
WORKDIR "/src/src/MSH.Web"

# Build the application
RUN dotnet build "MSH.Web.csproj" -c Release -o /app/build

FROM build AS publish
RUN dotnet publish "MSH.Web.csproj" -c Release -o /app/publish /p:UseAppHost=false

FROM base AS final
WORKDIR /app

# Install curl for health checks
RUN apt-get update && apt-get install -y curl && rm -rf /var/lib/apt/lists/*

COPY --from=publish /app/publish .

# Copy the network configuration script
COPY network-config.sh /app/network-config.sh
RUN chmod +x /app/network-config.sh

# Create logs directory
RUN mkdir -p /app/logs

# Set environment variables
ENV ASPNETCORE_URLS=http://+:8082
ENV ASPNETCORE_ENVIRONMENT=Production

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD curl -f http://localhost:8082/health || exit 1

ENTRYPOINT ["dotnet", "MSH.Web.dll"] 